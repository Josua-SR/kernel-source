From 73037c8dc1c8cf994a38fedba4a5af7e6da5e4f1 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Mon, 23 Nov 2020 09:53:26 +0100
Subject: [PATCH 20/41] ALSA: usb-audio: Simplify snd_usb_init_pitch() arguments
References: bsc#1178203
Patch-mainline: v5.11-rc1
Git-commit: 73037c8dc1c8cf994a38fedba4a5af7e6da5e4f1

A preliminary change for the later big changes.  This is a minor code
refactoring to drop the unnecessary arguments that can be retrieved in
a different way.

Tested-by: Keith Milner <kamilner@superlative.org>
Tested-by: Dylan Robinson <dylan_robinson@motu.com>
Link: https://lore.kernel.org/r/20201123085347.19667-21-tiwai@suse.de
Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 sound/usb/pcm.c    | 23 +++++++++--------------
 sound/usb/pcm.h    |  3 +--
 sound/usb/quirks.c |  2 +-
 sound/usb/stream.c |  2 +-
 4 files changed, 12 insertions(+), 18 deletions(-)

diff --git a/sound/usb/pcm.c b/sound/usb/pcm.c
index 38b461bdca86..0998be109af3 100644
--- a/sound/usb/pcm.c
+++ b/sound/usb/pcm.c
@@ -146,8 +146,7 @@ static struct audioformat *find_substream_format(struct snd_usb_substream *subs)
 			   subs->channels, subs);
 }
 
-static int init_pitch_v1(struct snd_usb_audio *chip, int iface,
-			 struct usb_host_interface *alts,
+static int init_pitch_v1(struct snd_usb_audio *chip,
 			 struct audioformat *fmt)
 {
 	struct usb_device *dev = chip->dev;
@@ -155,9 +154,7 @@ static int init_pitch_v1(struct snd_usb_audio *chip, int iface,
 	unsigned char data[1];
 	int err;
 
-	if (get_iface_desc(alts)->bNumEndpoints < 1)
-		return -EINVAL;
-	ep = get_endpoint(alts, 0)->bEndpointAddress;
+	ep = fmt->endpoint;
 
 	data[0] = 1;
 	err = snd_usb_ctl_msg(dev, usb_sndctrlpipe(dev, 0), UAC_SET_CUR,
@@ -166,15 +163,14 @@ static int init_pitch_v1(struct snd_usb_audio *chip, int iface,
 			      data, sizeof(data));
 	if (err < 0) {
 		usb_audio_err(chip, "%d:%d: cannot set enable PITCH\n",
-			      iface, ep);
+			      fmt->iface, ep);
 		return err;
 	}
 
 	return 0;
 }
 
-static int init_pitch_v2(struct snd_usb_audio *chip, int iface,
-			 struct usb_host_interface *alts,
+static int init_pitch_v2(struct snd_usb_audio *chip,
 			 struct audioformat *fmt)
 {
 	struct usb_device *dev = chip->dev;
@@ -188,7 +184,7 @@ static int init_pitch_v2(struct snd_usb_audio *chip, int iface,
 			      data, sizeof(data));
 	if (err < 0) {
 		usb_audio_err(chip, "%d:%d: cannot set enable PITCH (v2)\n",
-			      iface, fmt->altsetting);
+			      fmt->iface, fmt->altsetting);
 		return err;
 	}
 
@@ -198,8 +194,7 @@ static int init_pitch_v2(struct snd_usb_audio *chip, int iface,
 /*
  * initialize the pitch control and sample rate
  */
-int snd_usb_init_pitch(struct snd_usb_audio *chip, int iface,
-		       struct usb_host_interface *alts,
+int snd_usb_init_pitch(struct snd_usb_audio *chip,
 		       struct audioformat *fmt)
 {
 	/* if endpoint doesn't have pitch control, bail out */
@@ -209,10 +204,10 @@ int snd_usb_init_pitch(struct snd_usb_audio *chip, int iface,
 	switch (fmt->protocol) {
 	case UAC_VERSION_1:
 	default:
-		return init_pitch_v1(chip, iface, alts, fmt);
+		return init_pitch_v1(chip, fmt);
 
 	case UAC_VERSION_2:
-		return init_pitch_v2(chip, iface, alts, fmt);
+		return init_pitch_v2(chip, fmt);
 	}
 }
 
@@ -682,7 +677,7 @@ static int set_format(struct snd_usb_substream *subs, struct audioformat *fmt)
 		return err;
 
 	if (subs->need_setup_ep) {
-		err = snd_usb_init_pitch(chip, fmt->iface, alts, fmt);
+		err = snd_usb_init_pitch(chip, fmt);
 		if (err < 0)
 			return err;
 	}
diff --git a/sound/usb/pcm.h b/sound/usb/pcm.h
index 362782c2df5c..a4f784225abc 100644
--- a/sound/usb/pcm.h
+++ b/sound/usb/pcm.h
@@ -9,8 +9,7 @@ void snd_usb_set_pcm_ops(struct snd_pcm *pcm, int stream);
 int snd_usb_pcm_suspend(struct snd_usb_stream *as);
 int snd_usb_pcm_resume(struct snd_usb_stream *as);
 
-int snd_usb_init_pitch(struct snd_usb_audio *chip, int iface,
-		       struct usb_host_interface *alts,
+int snd_usb_init_pitch(struct snd_usb_audio *chip,
 		       struct audioformat *fmt);
 void snd_usb_preallocate_buffer(struct snd_usb_substream *subs);
 
diff --git a/sound/usb/quirks.c b/sound/usb/quirks.c
index 018c6f241ffb..013ab93fb640 100644
--- a/sound/usb/quirks.c
+++ b/sound/usb/quirks.c
@@ -177,7 +177,7 @@ static int create_fixed_stream_quirk(struct snd_usb_audio *chip,
 	if (fp->maxpacksize == 0)
 		fp->maxpacksize = le16_to_cpu(get_endpoint(alts, 0)->wMaxPacketSize);
 	usb_set_interface(chip->dev, fp->iface, 0);
-	snd_usb_init_pitch(chip, fp->iface, alts, fp);
+	snd_usb_init_pitch(chip, fp);
 	snd_usb_init_sample_rate(chip, fp, fp->rate_max);
 	return 0;
 
diff --git a/sound/usb/stream.c b/sound/usb/stream.c
index 23e881985123..7f58c7625cd4 100644
--- a/sound/usb/stream.c
+++ b/sound/usb/stream.c
@@ -1224,7 +1224,7 @@ static int __snd_usb_parse_audio_interface(struct snd_usb_audio *chip,
 
 		/* try to set the interface... */
 		usb_set_interface(chip->dev, iface_no, 0);
-		snd_usb_init_pitch(chip, iface_no, alts, fp);
+		snd_usb_init_pitch(chip, fp);
 		snd_usb_init_sample_rate(chip, fp, fp->rate_max);
 		usb_set_interface(chip->dev, iface_no, altno);
 	}
-- 
2.16.4

