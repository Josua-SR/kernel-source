From: Harald Freudenberger <freude@linux.ibm.com>
Subject: s390/zcrypt: fix ap_instructions_available() returncodes
Patch-mainline: v4.19-rc1
Git-commit: 2395103b3fbf2553d94a64ac3e29595cb040474b
References: FATE#325689, LTC#167899, bsc#1113520

Summary:     zcrypt: AP bus support for alternate driver(s)
Description: AP bus support for alternate driver(s) and deterministic
             driver binding. For details please read the patch header
             for commit 7e0bdbe5c21cb8316a694e46ad5aad339f6894a6

Upstream-Description:

             s390/zcrypt: fix ap_instructions_available() returncodes

             During review of KVM patches it was complained that the
             ap_instructions_available() function returns 0 if AP
             instructions are available and -ENODEV if not. The function
             acts like a boolean function to check for AP instructions
             available and thus should return 0 on failure and != 0 on
             success. Changed to the suggested behaviour and adapted
             the one and only caller of this function which is the ap
             bus core code.

             Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
             Acked-by: Cornelia Huck <cohuck@redhat.com>
             Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>

Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 arch/s390/include/asm/ap.h   |   10 +++++-----
 drivers/s390/crypto/ap_bus.c |    2 +-
 2 files changed, 6 insertions(+), 6 deletions(-)

--- a/arch/s390/include/asm/ap.h
+++ b/arch/s390/include/asm/ap.h
@@ -52,20 +52,20 @@ struct ap_queue_status {
 /**
  * ap_intructions_available() - Test if AP instructions are available.
  *
- * Returns 0 if the AP instructions are installed.
+ * Returns 1 if the AP instructions are installed, otherwise 0.
  */
 static inline int ap_instructions_available(void)
 {
 	register unsigned long reg0 asm ("0") = AP_MKQID(0, 0);
-	register unsigned long reg1 asm ("1") = -ENODEV;
-	register unsigned long reg2 asm ("2");
+	register unsigned long reg1 asm ("1") = 0;
+	register unsigned long reg2 asm ("2") = 0;
 
 	asm volatile(
 		"   .long 0xb2af0000\n"		/* PQAP(TAPQ) */
-		"0: la    %0,0\n"
+		"0: la    %0,1\n"
 		"1:\n"
 		EX_TABLE(0b, 1b)
-		: "+d" (reg1), "=d" (reg2)
+		: "+d" (reg1), "+d" (reg2)
 		: "d" (reg0)
 		: "cc");
 	return reg1;
--- a/drivers/s390/crypto/ap_bus.c
+++ b/drivers/s390/crypto/ap_bus.c
@@ -1239,7 +1239,7 @@ int __init ap_module_init(void)
 	if (rc)
 		return rc;
 
-	if (ap_instructions_available() != 0) {
+	if (!ap_instructions_available()) {
 		pr_warn("The hardware system does not support AP instructions\n");
 		return -ENODEV;
 	}
