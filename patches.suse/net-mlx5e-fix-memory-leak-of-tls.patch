From: Colin Ian King <colin.king@canonical.com>
Date: Tue, 30 Jun 2020 16:16:46 +0100
Subject: net/mlx5e: fix memory leak of tls
Patch-mainline: v5.9-rc1
Git-commit: 5831b33362fdb60d56314a237b764e24ee1a538e
References: jsc#SLE-15172

The error return path when create_singlethread_workqueue fails currently
does not kfree tls and leads to a memory leak. Fix this by kfree'ing
tls before returning -ENOMEM.

Addresses-Coverity: ("Resource leak")
Fixes: 1182f3659357 ("net/mlx5e: kTLS, Add kTLS RX HW offload support")
Signed-off-by: Colin Ian King <colin.king@canonical.com>
Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/tls.c
@@ -232,8 +232,10 @@ int mlx5e_tls_init(struct mlx5e_priv *pr
 		return -ENOMEM;
 
 	tls->rx_wq = create_singlethread_workqueue("mlx5e_tls_rx");
-	if (!tls->rx_wq)
+	if (!tls->rx_wq) {
+		kfree(tls);
 		return -ENOMEM;
+	}
 
 	priv->tls = tls;
 	return 0;
