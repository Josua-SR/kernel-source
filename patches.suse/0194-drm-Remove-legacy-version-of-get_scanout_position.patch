From c48630da16acd9cceeff55646d4ece9cdfc31d6c Mon Sep 17 00:00:00 2001
From: Thomas Zimmermann <tzimmermann@suse.de>
Date: Thu, 23 Jan 2020 14:59:43 +0100
Subject: drm: Remove legacy version of get_scanout_position()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Git-commit: 48e678076e58341a70369d2db67770272181aa41
Patch-mainline: v5.7-rc1
References: jsc#SLE-12680, jsc#SLE-12880, jsc#SLE-12882, jsc#SLE-12883, jsc#SLE-13496, jsc#SLE-15322

The legacy version of get_scanout_position() was only useful while
drivers still used drm_driver.get_scanout_position(). With no such
drivers left, the related typedef and code can be removed

Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20200123135943.24140-23-tzimmermann@suse.de
Signed-off-by: Patrik Jakobsson <pjakobsson@suse.de>
---
 drivers/gpu/drm/drm_vblank.c    | 27 +++++++--------------------
 drivers/gpu/drm/i915/i915_irq.c |  2 +-
 include/drm/drm_vblank.h        | 12 +-----------
 3 files changed, 9 insertions(+), 32 deletions(-)

diff --git a/drivers/gpu/drm/drm_vblank.c b/drivers/gpu/drm/drm_vblank.c
index 224785020f17..47fc4339ec7f 100644
--- a/drivers/gpu/drm/drm_vblank.c
+++ b/drivers/gpu/drm/drm_vblank.c
@@ -604,9 +604,6 @@ EXPORT_SYMBOL(drm_calc_timestamping_constants);
  * @get_scanout_position:
  *     Callback function to retrieve the scanout position. See
  *     @struct drm_crtc_helper_funcs.get_scanout_position.
- * @get_scanout_position_legacy:
- *     Callback function to retrieve the scanout position. See
- *     @struct drm_driver.get_scanout_position.
  *
  * Implements calculation of exact vblank timestamps from given drm_display_mode
  * timings and current video scanout position of a CRTC.
@@ -629,8 +626,7 @@ bool
 drm_crtc_vblank_helper_get_vblank_timestamp_internal(
 	struct drm_crtc *crtc, int *max_error, ktime_t *vblank_time,
 	bool in_vblank_irq,
-	drm_vblank_get_scanout_position_func get_scanout_position,
-	drm_vblank_get_scanout_position_legacy_func get_scanout_position_legacy)
+	drm_vblank_get_scanout_position_func get_scanout_position)
 {
 	struct drm_device *dev = crtc->dev;
 	unsigned int pipe = crtc->index;
@@ -648,7 +644,7 @@ drm_crtc_vblank_helper_get_vblank_timestamp_internal(
 	}
 
 	/* Scanout position query not supported? Should not happen. */
-	if (!get_scanout_position && !get_scanout_position_legacy) {
+	if (!get_scanout_position) {
 		DRM_ERROR("Called from CRTC w/o get_scanout_position()!?\n");
 		return false;
 	}
@@ -679,19 +675,10 @@ drm_crtc_vblank_helper_get_vblank_timestamp_internal(
 		 * Get vertical and horizontal scanout position vpos, hpos,
 		 * and bounding timestamps stime, etime, pre/post query.
 		 */
-		if (get_scanout_position) {
-			vbl_status = get_scanout_position(crtc,
-							  in_vblank_irq,
-							  &vpos, &hpos,
-							  &stime, &etime,
-							  mode);
-		} else {
-			vbl_status = get_scanout_position_legacy(dev, pipe,
-								 in_vblank_irq,
-								 &vpos, &hpos,
-								 &stime, &etime,
-								 mode);
-		}
+		vbl_status = get_scanout_position(crtc, in_vblank_irq,
+						  &vpos, &hpos,
+						  &stime, &etime,
+						  mode);
 
 		/* Return as no-op if scanout query unsupported or failed. */
 		if (!vbl_status) {
@@ -783,7 +770,7 @@ bool drm_crtc_vblank_helper_get_vblank_timestamp(struct drm_crtc *crtc,
 {
 	return drm_crtc_vblank_helper_get_vblank_timestamp_internal(
 		crtc, max_error, vblank_time, in_vblank_irq,
-		crtc->helper_private->get_scanout_position, NULL);
+		crtc->helper_private->get_scanout_position);
 }
 EXPORT_SYMBOL(drm_crtc_vblank_helper_get_vblank_timestamp);
 
diff --git a/drivers/gpu/drm/i915/i915_irq.c b/drivers/gpu/drm/i915/i915_irq.c
index 29bf847999f5..3245f7c5c84f 100644
--- a/drivers/gpu/drm/i915/i915_irq.c
+++ b/drivers/gpu/drm/i915/i915_irq.c
@@ -886,7 +886,7 @@ bool intel_crtc_get_vblank_timestamp(struct drm_crtc *crtc, int *max_error,
 {
 	return drm_crtc_vblank_helper_get_vblank_timestamp_internal(
 		crtc, max_error, vblank_time, in_vblank_irq,
-		i915_get_crtc_scanoutpos, NULL);
+		i915_get_crtc_scanoutpos);
 }
 
 int intel_get_crtc_scanline(struct intel_crtc *crtc)
diff --git a/include/drm/drm_vblank.h b/include/drm/drm_vblank.h
index e20eb254b0c4..dd9f5b9e56e4 100644
--- a/include/drm/drm_vblank.h
+++ b/include/drm/drm_vblank.h
@@ -247,22 +247,12 @@ typedef bool (*drm_vblank_get_scanout_position_func)(struct drm_crtc *crtc,
 						     ktime_t *etime,
 						     const struct drm_display_mode *mode);
 
-typedef bool (*drm_vblank_get_scanout_position_legacy_func)(struct drm_device *dev,
-							    unsigned int pipe,
-							    bool in_vblank_irq,
-							    int *vpos,
-							    int *hpos,
-							    ktime_t *stime,
-							    ktime_t *etime,
-							    const struct drm_display_mode *mode);
-
 bool
 drm_crtc_vblank_helper_get_vblank_timestamp_internal(struct drm_crtc *crtc,
 						     int *max_error,
 						     ktime_t *vblank_time,
 						     bool in_vblank_irq,
-						     drm_vblank_get_scanout_position_func get_scanout_position,
-						     drm_vblank_get_scanout_position_legacy_func get_scanout_position_legacy);
+						     drm_vblank_get_scanout_position_func get_scanout_position);
 bool drm_crtc_vblank_helper_get_vblank_timestamp(struct drm_crtc *crtc,
 						 int *max_error,
 						 ktime_t *vblank_time,
-- 
2.28.0

