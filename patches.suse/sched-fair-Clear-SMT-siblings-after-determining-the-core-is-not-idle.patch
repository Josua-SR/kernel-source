From: Mel Gorman <mgorman@suse.de>
Date: Sun, 1 Mar 2020 22:07:30 +0000
Subject: [PATCH] sched/fair: Clear SMT siblings after determining the core is
 not idle

Patch-mainline: Submitted, https://lore.kernel.org/lkml/20200320151245.21152-4-mgorman@techsingularity.net/
References: bnc#1155798 (CPU scheduler functional and performance backports)

The clearing of SMT siblings from the SIS mask before checking for an idle
core is a small but unnecessary cost. Defer the clearing of the siblings
until the scan moves to the next potential target. The cost of this was
not measured as it is borderline noise but it should be self-evident.

Signed-off-by: Mel Gorman <mgorman@suse.de>
Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 kernel/sched/fair.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index facda53a7264..985ab3216cc7 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -5993,10 +5993,11 @@ static int select_idle_core(struct task_struct *p, struct sched_domain *sd, int
 				break;
 			}
 		}
-		cpumask_andnot(cpus, cpus, cpu_smt_mask(core));
 
 		if (idle)
 			return core;
+
+		cpumask_andnot(cpus, cpus, cpu_smt_mask(core));
 	}
 
 	/*
