From: Dave Airlie <airlied@redhat.com>
Date: Tue, 3 Oct 2017 15:11:01 +1000
Subject: amdgpu/dc: set a bunch of functions to static.
Git-commit: 44858055bb28b1ba45dc05acecf9087bc4786701
Patch-mainline: v4.15-rc1
References: FATE#326289 FATE#326079 FATE#326049 FATE#322398 FATE#326166

All of these are unused outside the file they are in.

Signed-off-by: Dave Airlie <airlied@redhat.com>
Reviewed-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 drivers/gpu/drm/amd/display/dc/bios/bios_parser.c       |    2 +-
 drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c        |    2 +-
 drivers/gpu/drm/amd/display/dc/core/dc.c                |    2 +-
 drivers/gpu/drm/amd/display/dc/core/dc_link.c           |    2 +-
 drivers/gpu/drm/amd/display/dc/core/dc_link_dp.c        |    2 +-
 drivers/gpu/drm/amd/display/dc/core/dc_link_hwss.c      |    2 +-
 drivers/gpu/drm/amd/display/dc/dce/dce_audio.c          |    3 +--
 drivers/gpu/drm/amd/display/dc/dce/dce_stream_encoder.c |    6 +++---
 8 files changed, 10 insertions(+), 11 deletions(-)

--- a/drivers/gpu/drm/amd/display/dc/bios/bios_parser.c
+++ b/drivers/gpu/drm/amd/display/dc/bios/bios_parser.c
@@ -531,7 +531,7 @@ static enum bp_result bios_parser_get_hp
 	return BP_RESULT_NORECORD;
 }
 
-enum bp_result bios_parser_get_device_tag_record(
+static enum bp_result bios_parser_get_device_tag_record(
 	struct bios_parser *bp,
 	ATOM_OBJECT *object,
 	ATOM_CONNECTOR_DEVICE_TAG_RECORD **record)
--- a/drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
+++ b/drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
@@ -1135,7 +1135,7 @@ bool dcn_validate_bandwidth(
 		return false;
 }
 
-unsigned int dcn_find_normalized_clock_vdd_Level(
+static unsigned int dcn_find_normalized_clock_vdd_Level(
 	const struct dc *dc,
 	enum dm_pp_clock_type clocks_type,
 	int clocks_in_khz)
--- a/drivers/gpu/drm/amd/display/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/display/dc/core/dc.c
@@ -327,7 +327,7 @@ static void set_test_pattern(
 			cust_pattern_size);
 }
 
-void set_dither_option(struct dc_stream_state *stream,
+static void set_dither_option(struct dc_stream_state *stream,
 		enum dc_dither_option option)
 {
 	struct bit_depth_reduction_params params;
--- a/drivers/gpu/drm/amd/display/dc/core/dc_link.c
+++ b/drivers/gpu/drm/amd/display/dc/core/dc_link.c
@@ -208,7 +208,7 @@ hpd_gpio_failure:
 	return false;
 }
 
-enum ddc_transaction_type get_ddc_transaction_type(
+static enum ddc_transaction_type get_ddc_transaction_type(
 		enum signal_type sink_signal)
 {
 	enum ddc_transaction_type transaction_type = DDC_TRANSACTION_TYPE_NONE;
--- a/drivers/gpu/drm/amd/display/dc/core/dc_link_dp.c
+++ b/drivers/gpu/drm/amd/display/dc/core/dc_link_dp.c
@@ -1209,7 +1209,7 @@ static inline bool reached_minimum_link_
 	return link_rate <= LINK_RATE_LOW;
 }
 
-enum dc_lane_count reduce_lane_count(enum dc_lane_count lane_count)
+static enum dc_lane_count reduce_lane_count(enum dc_lane_count lane_count)
 {
 	switch (lane_count) {
 	case LANE_COUNT_FOUR:
--- a/drivers/gpu/drm/amd/display/dc/core/dc_link_hwss.c
+++ b/drivers/gpu/drm/amd/display/dc/core/dc_link_hwss.c
@@ -110,7 +110,7 @@ void dp_enable_link_phy(
 	dp_receiver_power_ctrl(link, true);
 }
 
-bool edp_receiver_ready_T9(struct dc_link *link)
+static bool edp_receiver_ready_T9(struct dc_link *link)
 {
 	unsigned int tries = 0;
 	unsigned char sinkstatus = 0;
--- a/drivers/gpu/drm/amd/display/dc/dce/dce_audio.c
+++ b/drivers/gpu/drm/amd/display/dc/dce/dce_audio.c
@@ -833,8 +833,7 @@ void dce_aud_wall_dto_setup(
 	}
 }
 
-bool dce_aud_endpoint_valid(
-		struct audio *audio)
+static bool dce_aud_endpoint_valid(struct audio *audio)
 {
 	uint32_t value;
 	uint32_t port_connectivity;
--- a/drivers/gpu/drm/amd/display/dc/dce/dce_stream_encoder.c
+++ b/drivers/gpu/drm/amd/display/dc/dce/dce_stream_encoder.c
@@ -1183,7 +1183,7 @@ static const struct audio_clock_info aud
 
 };
 
-union audio_cea_channels speakers_to_channels(
+static union audio_cea_channels speakers_to_channels(
 	struct audio_speaker_flags speaker_flags)
 {
 	union audio_cea_channels cea_channels = {0};
@@ -1217,7 +1217,7 @@ union audio_cea_channels speakers_to_cha
 	return cea_channels;
 }
 
-uint32_t calc_max_audio_packets_per_line(
+static uint32_t calc_max_audio_packets_per_line(
 	const struct audio_crtc_info *crtc_info)
 {
 	uint32_t max_packets_per_line;
@@ -1238,7 +1238,7 @@ uint32_t calc_max_audio_packets_per_line
 	return max_packets_per_line;
 }
 
-void get_audio_clock_info(
+static void get_audio_clock_info(
 	enum dc_color_depth color_depth,
 	uint32_t crtc_pixel_clock_in_khz,
 	uint32_t actual_pixel_clock_in_khz,
