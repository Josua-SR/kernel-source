From: Julian Wiedmann <jwi@linux.ibm.com>
Subject: qeth: convert qeth_reply.refcnt from atomic_t to refcount_t
Patch-mainline: v4.16-rc1
Git-commit: ae6959273a29426813974211e41e28f495bc10a6
References: FATE#326350, LTC#169511, bsc#1113509

Summary:     qeth: performance improvements
Description: This adds recent functional and performance improvements for the
             qeth network driver.
             Primarily this brings Scatter-Gather support for HiperSockets,
             reduced CPU consumption in the L3 IPv4 transmit path for OSA,
             improved Promiscuous Mode performance due to IFF_UNICAST_FLT,
             support for Scatter-Gather on z/VM virtual NICs, and
             support for delayed GRO flushing.

             For sanity & stability reasons, this effectively constitutes a
             backport of the qeth device driver from 4.19 mainline.
             

Upstream-Description:

             qeth: convert qeth_reply.refcnt from atomic_t to refcount_t

             atomic_t variables are currently used to implement reference
             counters with the following properties:
              - counter is initialized to 1 using atomic_set()
              - a resource is freed upon counter reaching zero
              - once counter reaches zero, its further
                increments aren't allowed
              - counter schema uses basic atomic operations
                (set, inc, inc_not_zero, dec_and_test, etc.)

             Such atomic variables should be converted to a newly provided
             refcount_t type and API that prevents accidental counter overflows
             and underflows. This is important since overflows and underflows
             can lead to use-after-free situation and be exploitable.

             The variable qeth_reply.refcnt is used as pure reference counter.
             Convert it to refcount_t and fix up the operations.

             Suggested-by: Kees Cook <keescook@chromium.org>
             Reviewed-by: David Windsor <dwindsor@gmail.com>
             Reviewed-by: Hans Liljestrand <ishkamiel@gmail.com>
             Signed-off-by: Elena Reshetova <elena.reshetova@intel.com>
             [jwi: removed the WARN_ONs. Use CONFIG_REFCOUNT_FULL if you care.]
             Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
             Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 drivers/s390/net/qeth_core.h      | 3 ++-
 drivers/s390/net/qeth_core_main.c | 8 +++-----
 2 files changed, 5 insertions(+), 6 deletions(-)

--- a/drivers/s390/net/qeth_core.h
+++ b/drivers/s390/net/qeth_core.h
@@ -21,6 +21,7 @@
 #include <linux/ethtool.h>
 #include <linux/hashtable.h>
 #include <linux/ip.h>
+#include <linux/refcount.h>
 
 #include <net/ipv6.h>
 #include <net/if_inet6.h>
@@ -632,7 +633,7 @@ struct qeth_reply {
 	int rc;
 	void *param;
 	struct qeth_card *card;
-	atomic_t refcnt;
+	refcount_t refcnt;
 };
 
 struct qeth_card_blkt {
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@ -564,7 +564,7 @@ static struct qeth_reply *qeth_alloc_reply(struct qeth_card *card)
 
 	reply = kzalloc(sizeof(struct qeth_reply), GFP_ATOMIC);
 	if (reply) {
-		atomic_set(&reply->refcnt, 1);
+		refcount_set(&reply->refcnt, 1);
 		atomic_set(&reply->received, 0);
 		reply->card = card;
 	}
@@ -573,14 +573,12 @@ static struct qeth_reply *qeth_alloc_reply(struct qeth_card *card)
 
 static void qeth_get_reply(struct qeth_reply *reply)
 {
-	WARN_ON(atomic_read(&reply->refcnt) <= 0);
-	atomic_inc(&reply->refcnt);
+	refcount_inc(&reply->refcnt);
 }
 
 static void qeth_put_reply(struct qeth_reply *reply)
 {
-	WARN_ON(atomic_read(&reply->refcnt) <= 0);
-	if (atomic_dec_and_test(&reply->refcnt))
+	if (refcount_dec_and_test(&reply->refcnt))
 		kfree(reply);
 }
 
