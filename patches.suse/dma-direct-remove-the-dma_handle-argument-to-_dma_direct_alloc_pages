From: Christoph Hellwig <hch@lst.de>
Date: Tue, 29 Oct 2019 09:57:32 +0100
Subject: dma-direct: remove the dma_handle argument to __dma_direct_alloc_pages
Git-commit: 4e1003aa56a7d60ddb048e43a7a51368fcfe36af
Patch-mainline: v5.5-rc1
References: bsc#1175898, ECO-2743

The argument isn't used anywhere, so stop passing it.

Signed-off-by: Christoph Hellwig <hch@lst.de>
Reviewed-by: Max Filippov <jcmvbkbc@gmail.com>
Acked-by: Joerg Roedel <jroedel@suse.de>
---
 include/linux/dma-direct.h |    2 +-
 kernel/dma/direct.c        |    4 ++--
 kernel/dma/remap.c         |    2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

--- a/include/linux/dma-direct.h
+++ b/include/linux/dma-direct.h
@@ -69,6 +69,6 @@ void *dma_direct_alloc_pages(struct devi
 void dma_direct_free_pages(struct device *dev, size_t size, void *cpu_addr,
 		dma_addr_t dma_addr, unsigned long attrs);
 struct page *__dma_direct_alloc_pages(struct device *dev, size_t size,
-		dma_addr_t *dma_handle, gfp_t gfp, unsigned long attrs);
+		gfp_t gfp, unsigned long attrs);
 int dma_direct_supported(struct device *dev, u64 mask);
 #endif /* _LINUX_DMA_DIRECT_H */
--- a/kernel/dma/direct.c
+++ b/kernel/dma/direct.c
@@ -82,7 +82,7 @@ static bool dma_coherent_ok(struct devic
 }
 
 struct page *__dma_direct_alloc_pages(struct device *dev, size_t size,
-		dma_addr_t *dma_handle, gfp_t gfp, unsigned long attrs)
+		gfp_t gfp, unsigned long attrs)
 {
 	size_t alloc_size = PAGE_ALIGN(size);
 	int node = dev_to_node(dev);
@@ -130,7 +130,7 @@ void *dma_direct_alloc_pages(struct devi
 	struct page *page;
 	void *ret;
 
-	page = __dma_direct_alloc_pages(dev, size, dma_handle, gfp, attrs);
+	page = __dma_direct_alloc_pages(dev, size, gfp, attrs);
 	if (!page)
 		return NULL;
 
--- a/kernel/dma/remap.c
+++ b/kernel/dma/remap.c
@@ -217,7 +217,7 @@ void *arch_dma_alloc(struct device *dev,
 		goto done;
 	}
 
-	page = __dma_direct_alloc_pages(dev, size, dma_handle, flags, attrs);
+	page = __dma_direct_alloc_pages(dev, size, flags, attrs);
 	if (!page)
 		return NULL;
 
