From: Paolo Abeni <pabeni@redhat.com>
Date: Mon, 7 May 2018 12:06:03 +0200
Subject: flow_dissector: do not rely on implicit casts
Patch-mainline: v4.18-rc1
Git-commit: d869dea664e662a4380ccf59cb9be9888a7af53a
References: bsc#1109837

This change fixes a couple of type mismatch reported by the sparse
tool, explicitly using the requested type for the offending arguments.

Signed-off-by: Paolo Abeni <pabeni@redhat.com>
Acked-by: Jon Maloy <jon.maloy@ericsson.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 include/net/tipc.h        |    4 ++--
 net/core/flow_dissector.c |    2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

--- a/include/net/tipc.h
+++ b/include/net/tipc.h
@@ -44,11 +44,11 @@ struct tipc_basic_hdr {
 	__be32 w[4];
 };
 
-static inline u32 tipc_hdr_rps_key(struct tipc_basic_hdr *hdr)
+static inline __be32 tipc_hdr_rps_key(struct tipc_basic_hdr *hdr)
 {
 	u32 w0 = ntohl(hdr->w[0]);
 	bool keepalive_msg = (w0 & KEEPALIVE_MSG_MASK) == KEEPALIVE_MSG_MASK;
-	int key;
+	__be32 key;
 
 	/* Return source node identity as key */
 	if (likely(!keepalive_msg))
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@ -1245,7 +1245,7 @@ u32 skb_get_poff(const struct sk_buff *s
 {
 	struct flow_keys_basic keys;
 
-	if (!skb_flow_dissect_flow_keys_basic(skb, &keys, 0, 0, 0, 0, 0))
+	if (!skb_flow_dissect_flow_keys_basic(skb, &keys, NULL, 0, 0, 0, 0))
 		return 0;
 
 	return __skb_get_poff(skb, skb->data, &keys, skb_headlen(skb));
