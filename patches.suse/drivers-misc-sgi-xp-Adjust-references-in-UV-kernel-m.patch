From: Mike Travis <mike.travis@hpe.com>
Date: Tue, 6 Oct 2020 16:34:27 -0500
Subject: drivers/misc/sgi-xp: Adjust references in UV kernel modules
Git-commit: 788b66e34e8ab82a93c63a83ba5a9d04f2f4ae26
Patch-mainline: 5.10-rc1
References: bnc#1177710 jsc#SLE-13285

Remove the define is_uv() is_uv_system and just use the latter as is.
This removes a conflict with a new symbol in the generated uv_mmrs.h
file (is_uv()).

Signed-off-by: Mike Travis <mike.travis@hpe.com>
Signed-off-by: Borislav Petkov <bp@suse.de>
Reviewed-by: Dimitri Sivanich <dimitri.sivanich@hpe.com>
Reviewed-by: Steve Wahl <steve.wahl@hpe.com>
Link: https://lkml.kernel.org/r/20201005203929.148656-4-mike.travis@hpe.com
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/misc/sgi-xp/xp.h            |    7 +------
 drivers/misc/sgi-xp/xp_main.c       |    4 ++--
 drivers/misc/sgi-xp/xp_uv.c         |    6 ++++--
 drivers/misc/sgi-xp/xpc_main.c      |    6 +++---
 drivers/misc/sgi-xp/xpc_partition.c |    2 +-
 drivers/misc/sgi-xp/xpnet.c         |    2 +-
 6 files changed, 12 insertions(+), 15 deletions(-)

--- a/drivers/misc/sgi-xp/xp.h
+++ b/drivers/misc/sgi-xp/xp.h
@@ -17,11 +17,6 @@
 
 #if defined CONFIG_X86_UV || defined CONFIG_IA64_SGI_UV
 #include <asm/uv/uv.h>
-#define is_uv()		is_uv_system()
-#endif
-
-#ifndef is_uv
-#define is_uv()		0
 #endif
 
 #if defined CONFIG_IA64
@@ -96,7 +91,7 @@
 
 #define XPC_MSG_SIZE(_payload_size) \
 				ALIGN(XPC_MSG_HDR_MAX_SIZE + (_payload_size), \
-				      is_uv() ? 64 : 128)
+				      is_uv_system() ? 64 : 128)
 
 
 /*
--- a/drivers/misc/sgi-xp/xp_main.c
+++ b/drivers/misc/sgi-xp/xp_main.c
@@ -235,7 +235,7 @@ xp_init(void)
 
 	if (is_shub())
 		ret = xp_init_sn2();
-	else if (is_uv())
+	else if (is_uv_system())
 		ret = xp_init_uv();
 	else
 		ret = 0;
@@ -253,7 +253,7 @@ xp_exit(void)
 {
 	if (is_shub())
 		xp_exit_sn2();
-	else if (is_uv())
+	else if (is_uv_system())
 		xp_exit_uv();
 }
 
--- a/drivers/misc/sgi-xp/xp_uv.c
+++ b/drivers/misc/sgi-xp/xp_uv.c
@@ -148,7 +148,9 @@ xp_restrict_memprotect_uv(unsigned long
 enum xp_retval
 xp_init_uv(void)
 {
-	BUG_ON(!is_uv());
+	WARN_ON(!is_uv_system());
+	if (!is_uv_system())
+		return xpUnsupported;
 
 	xp_max_npartitions = XP_MAX_NPARTITIONS_UV;
 	xp_partition_id = sn_partition_id;
@@ -167,5 +169,5 @@ xp_init_uv(void)
 void
 xp_exit_uv(void)
 {
-	BUG_ON(!is_uv());
+	WARN_ON(!is_uv_system());
 }
--- a/drivers/misc/sgi-xp/xpc_main.c
+++ b/drivers/misc/sgi-xp/xpc_main.c
@@ -1052,7 +1052,7 @@ xpc_do_exit(enum xp_retval reason)
 
 	if (is_shub())
 		xpc_exit_sn2();
-	else if (is_uv())
+	else if (is_uv_system())
 		xpc_exit_uv();
 }
 
@@ -1249,7 +1249,7 @@ xpc_init(void)
 			ret = xpc_init_sn2();
 		}
 
-	} else if (is_uv()) {
+	} else if (is_uv_system()) {
 		ret = xpc_init_uv();
 
 	} else {
@@ -1337,7 +1337,7 @@ out_2:
 out_1:
 	if (is_shub())
 		xpc_exit_sn2();
-	else if (is_uv())
+	else if (is_uv_system())
 		xpc_exit_uv();
 	return ret;
 }
--- a/drivers/misc/sgi-xp/xpc_partition.c
+++ b/drivers/misc/sgi-xp/xpc_partition.c
@@ -437,7 +437,7 @@ xpc_discovery(void)
 	 */
 	region_size = xp_region_size;
 
-	if (is_uv())
+	if (is_uv_system())
 		max_regions = 256;
 	else {
 		max_regions = 64;
--- a/drivers/misc/sgi-xp/xpnet.c
+++ b/drivers/misc/sgi-xp/xpnet.c
@@ -515,7 +515,7 @@ xpnet_init(void)
 {
 	int result;
 
-	if (!is_shub() && !is_uv())
+	if (!is_shub() && !is_uv_system())
 		return -ENODEV;
 
 	dev_info(xpnet, "registering network device %s\n", XPNET_DEVICE_NAME);
