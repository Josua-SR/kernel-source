From: Julian Wiedmann <jwi@linux.ibm.com>
Subject: s390/qeth: reset layer2 attribute on layer switch
Patch-mainline: v4.19-rc1
Git-commit: 70551dc46ffa3555a0b5f3545b0cd87ab67fd002
References: FATE#326350, LTC#169511, bsc#1113509

Summary:     qeth: performance improvements
Description: This adds recent functional and performance improvements for the
             qeth network driver.
             Primarily this brings Scatter-Gather support for HiperSockets,
             reduced CPU consumption in the L3 IPv4 transmit path for OSA,
             improved Promiscuous Mode performance due to IFF_UNICAST_FLT,
             support for Scatter-Gather on z/VM virtual NICs, and
             support for delayed GRO flushing.

             For sanity & stability reasons, this effectively constitutes a
             backport of the qeth device driver from 4.19 mainline.
             

Upstream-Description:

             s390/qeth: reset layer2 attribute on layer switch

             After the subdriver's remove() routine has completed, the card's layer
             mode is undetermined again. Reflect this in the layer2 field.

             If qeth_dev_layer2_store() hits an error after remove() was called, the
             card _always_ requires a setup(), even if the previous layer mode is
             requested again.
             But qeth_dev_layer2_store() bails out early if the requested layer mode
             still matches the current one. So unless we reset the layer2 field,
             re-probing the card back to its previous mode is currently not possible.

             Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
             Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 drivers/s390/net/qeth_core_sys.c |    1 +
 1 file changed, 1 insertion(+)

--- a/drivers/s390/net/qeth_core_sys.c
+++ b/drivers/s390/net/qeth_core_sys.c
@@ -425,6 +425,7 @@ static ssize_t qeth_dev_layer2_store(str
 	if (card->discipline) {
 		card->discipline->remove(card->gdev);
 		qeth_core_free_discipline(card);
+		card->options.layer2 = -1;
 	}
 
 	rc = qeth_core_load_discipline(card, newdis);
