From: Harry Wentland <harry.wentland@amd.com>
Date: Mon, 24 Jul 2017 15:20:50 -0400
Subject: drm/amd/display: Roll gamma struct into core_gamma
Git-commit: 0b0aab86d51ee63d521f0d96ff4dfe1d6252f9b2
Patch-mainline: v4.15-rc1
References: FATE#326289 FATE#326079 FATE#326049 FATE#322398 FATE#326166

Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Acked-by: Harry Wentland <Harry.Wentland@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 drivers/gpu/drm/amd/display/dc/core/dc_surface.c |   21 ++++-----------------
 drivers/gpu/drm/amd/display/dc/inc/core_types.h  |    3 +++
 2 files changed, 7 insertions(+), 17 deletions(-)

--- a/drivers/gpu/drm/amd/display/dc/core/dc_surface.c
+++ b/drivers/gpu/drm/amd/display/dc/core/dc_surface.c
@@ -32,19 +32,6 @@
 #include "transform.h"
 
 /*******************************************************************************
- * Private structures
- ******************************************************************************/
-struct gamma {
-	struct core_gamma protected;
-	int ref_count;
-};
-
-#define DC_GAMMA_TO_GAMMA(dc_gamma) \
-	container_of(dc_gamma, struct gamma, protected.public)
-#define CORE_GAMMA_TO_GAMMA(core_gamma) \
-	container_of(core_gamma, struct gamma, protected)
-
-/*******************************************************************************
  * Private functions
  ******************************************************************************/
 static bool construct(struct dc_context *ctx, struct dc_surface *surface)
@@ -152,7 +139,7 @@ void dc_surface_release(struct dc_surfac
 
 void dc_gamma_retain(const struct dc_gamma *dc_gamma)
 {
-	struct gamma *gamma = DC_GAMMA_TO_GAMMA(dc_gamma);
+	struct core_gamma *gamma = DC_GAMMA_TO_CORE(dc_gamma);
 
 	ASSERT(gamma->ref_count > 0);
 	++gamma->ref_count;
@@ -160,7 +147,7 @@ void dc_gamma_retain(const struct dc_gam
 
 void dc_gamma_release(const struct dc_gamma **dc_gamma)
 {
-	struct gamma *gamma = DC_GAMMA_TO_GAMMA(*dc_gamma);
+	struct core_gamma *gamma = DC_GAMMA_TO_CORE(*dc_gamma);
 
 	ASSERT(gamma->ref_count > 0);
 	--gamma->ref_count;
@@ -173,14 +160,14 @@ void dc_gamma_release(const struct dc_ga
 
 struct dc_gamma *dc_create_gamma()
 {
-	struct gamma *gamma = dm_alloc(sizeof(*gamma));
+	struct core_gamma *gamma = dm_alloc(sizeof(*gamma));
 
 	if (gamma == NULL)
 		goto alloc_fail;
 
 	++gamma->ref_count;
 
-	return &gamma->protected.public;
+	return &gamma->public;
 
 alloc_fail:
 	return NULL;
--- a/drivers/gpu/drm/amd/display/dc/inc/core_types.h
+++ b/drivers/gpu/drm/amd/display/dc/inc/core_types.h
@@ -46,6 +46,9 @@ struct core_stream;
 struct core_gamma {
 	struct dc_gamma public;
 	struct dc_context *ctx;
+
+	/* private to dc_surface.c */
+	int ref_count;
 };
 
 void enable_surface_flip_reporting(struct dc_surface *dc_surface,
