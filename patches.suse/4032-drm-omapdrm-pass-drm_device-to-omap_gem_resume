From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Fri, 13 Oct 2017 17:58:58 +0300
Subject: drm: omapdrm: Pass drm_device to omap_gem_resume()
Git-commit: 7fb15c480eea29a16f6a0568ce3ee5d5f40ef9c6
Patch-mainline: v4.16-rc1
References: FATE#326289 FATE#326079 FATE#326049 FATE#322398 FATE#326166

The omap_gem_resume() function is internal to the driver. Pass it a
drm_device pointer that the caller already has instead of looking it up
from device data.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 drivers/gpu/drm/omapdrm/omap_drv.c |    2 +-
 drivers/gpu/drm/omapdrm/omap_drv.h |    2 +-
 drivers/gpu/drm/omapdrm/omap_gem.c |    7 +++----
 3 files changed, 5 insertions(+), 6 deletions(-)

--- a/drivers/gpu/drm/omapdrm/omap_drv.c
+++ b/drivers/gpu/drm/omapdrm/omap_drv.c
@@ -715,7 +715,7 @@ static int omap_drm_resume(struct device
 
 	drm_kms_helper_poll_enable(drm_dev);
 
-	return omap_gem_resume(dev);
+	return omap_gem_resume(drm_dev);
 }
 #endif
 
--- a/drivers/gpu/drm/omapdrm/omap_drv.h
+++ b/drivers/gpu/drm/omapdrm/omap_drv.h
@@ -97,7 +97,7 @@ void omap_gem_describe_objects(struct li
 #endif
 
 #ifdef CONFIG_PM
-int omap_gem_resume(struct device *dev);
+int omap_gem_resume(struct drm_device *dev);
 #endif
 
 int omap_irq_enable_vblank(struct drm_crtc *crtc);
--- a/drivers/gpu/drm/omapdrm/omap_gem.c
+++ b/drivers/gpu/drm/omapdrm/omap_gem.c
@@ -996,10 +996,9 @@ void *omap_gem_vaddr(struct drm_gem_obje
 
 #ifdef CONFIG_PM
 /* re-pin objects in DMM in resume path: */
-int omap_gem_resume(struct device *dev)
+int omap_gem_resume(struct drm_device *dev)
 {
-	struct drm_device *drm_dev = dev_get_drvdata(dev);
-	struct omap_drm_private *priv = drm_dev->dev_private;
+	struct omap_drm_private *priv = dev->dev_private;
 	struct omap_gem_object *omap_obj;
 	int ret = 0;
 
@@ -1012,7 +1011,7 @@ int omap_gem_resume(struct device *dev)
 					omap_obj->pages, npages,
 					omap_obj->roll, true);
 			if (ret) {
-				dev_err(dev, "could not repin: %d\n", ret);
+				dev_err(dev->dev, "could not repin: %d\n", ret);
 				return ret;
 			}
 		}
