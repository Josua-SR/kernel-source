From: Don Hiatt <don.hiatt@intel.com>
Date: Thu, 1 Feb 2018 12:38:48 -0800
Subject: IB/hfi1: Add 16B rcvhdr trace support
Patch-mainline: v4.16-rc1
Git-commit: 6197a815fe9c6e28523eede3d69fa5a8dd7052db
References: bsc#1114685 FATE#325854

Add trace_hfi1_rcvhdr support for bypass packets.
While here, remove the etype argument as it is available
in struct hfi1_packet.

Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
Signed-off-by: Don Hiatt <don.hiatt@intel.com>
Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/infiniband/hw/hfi1/driver.c   |    4 +++-
 drivers/infiniband/hw/hfi1/trace_rx.h |    6 +++---
 2 files changed, 6 insertions(+), 4 deletions(-)

--- a/drivers/infiniband/hw/hfi1/driver.c
+++ b/drivers/infiniband/hw/hfi1/driver.c
@@ -1560,7 +1560,7 @@ int process_receive_ib(struct hfi1_packe
 	if (hfi1_setup_9B_packet(packet))
 		return RHF_RCV_CONTINUE;
 
-	trace_hfi1_rcvhdr(packet, RHF_RCV_TYPE_IB);
+	trace_hfi1_rcvhdr(packet);
 
 	if (unlikely(rhf_err_flags(packet->rhf))) {
 		handle_eflags(packet);
@@ -1596,6 +1596,8 @@ int process_receive_bypass(struct hfi1_p
 	if (hfi1_setup_bypass_packet(packet))
 		return RHF_RCV_CONTINUE;
 
+	trace_hfi1_rcvhdr(packet);
+
 	if (unlikely(rhf_err_flags(packet->rhf))) {
 		handle_eflags(packet);
 		return RHF_RCV_CONTINUE;
--- a/drivers/infiniband/hw/hfi1/trace_rx.h
+++ b/drivers/infiniband/hw/hfi1/trace_rx.h
@@ -63,8 +63,8 @@ __print_symbolic(type,
 #define TRACE_SYSTEM hfi1_rx
 
 TRACE_EVENT(hfi1_rcvhdr,
-	    TP_PROTO(struct hfi1_packet *packet, u32 etype),
-	    TP_ARGS(packet, etype),
+	    TP_PROTO(struct hfi1_packet *packet),
+	    TP_ARGS(packet),
 	    TP_STRUCT__entry(DD_DEV_ENTRY(packet->rcd->dd)
 			     __field(u64, eflags)
 			     __field(u32, ctxt)
@@ -77,7 +77,7 @@ TRACE_EVENT(hfi1_rcvhdr,
 	     TP_fast_assign(DD_DEV_ASSIGN(packet->rcd->dd);
 			    __entry->eflags = rhf_err_flags(packet->rhf);
 			    __entry->ctxt = packet->rcd->ctxt;
-			    __entry->etype = etype;
+			    __entry->etype = packet->etype;
 			    __entry->hlen = packet->hlen;
 			    __entry->tlen = packet->tlen;
 			    __entry->updegr = packet->updegr;
