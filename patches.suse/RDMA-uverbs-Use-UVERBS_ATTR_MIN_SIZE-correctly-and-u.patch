From: Jason Gunthorpe <jgg@mellanox.com>
Date: Wed, 4 Jul 2018 08:50:30 +0300
Subject: RDMA/uverbs: Use UVERBS_ATTR_MIN_SIZE correctly and uniformly
Patch-mainline: v4.19-rc1
Git-commit: 540cd69209682a351ab76b83b85ea856b8192720
References: bsc#1103992 FATE#326009

This newer macro allows specifying a lower bound on the accepted size, and
has an 'unlimited' upper bound. Due to this it never checks for trailing
zeroing so it doesn't make any sense to combine it with MIN_SZ_OR_ZERO, so
drop MIN_SZ_OR_ZERO when they are used together

There were a couple of places that open coded this pattern, switch them to
use the clearer UVERBS_ATTR_MIN_SIZE for clarity.

Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/infiniband/core/uverbs_std_types_counters.c |    3 +--
 drivers/infiniband/hw/mlx5/devx.c                   |   16 ++++------------
 include/rdma/uverbs_ioctl.h                         |   17 +++++++++--------
 3 files changed, 14 insertions(+), 22 deletions(-)

--- a/drivers/infiniband/core/uverbs_std_types_counters.c
+++ b/drivers/infiniband/core/uverbs_std_types_counters.c
@@ -138,7 +138,6 @@ DECLARE_UVERBS_NAMED_METHOD_DESTROY(
 			UVERBS_ACCESS_DESTROY,
 			UA_MANDATORY));
 
-#define MAX_COUNTERS_BUFF_SIZE USHRT_MAX
 DECLARE_UVERBS_NAMED_METHOD(
 	UVERBS_METHOD_COUNTERS_READ,
 	UVERBS_ATTR_IDR(UVERBS_ATTR_READ_COUNTERS_HANDLE,
@@ -146,7 +145,7 @@ DECLARE_UVERBS_NAMED_METHOD(
 			UVERBS_ACCESS_READ,
 			UA_MANDATORY),
 	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_READ_COUNTERS_BUFF,
-			    UVERBS_ATTR_SIZE(0, MAX_COUNTERS_BUFF_SIZE),
+			    UVERBS_ATTR_MIN_SIZE(0),
 			    UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_READ_COUNTERS_FLAGS,
 			   UVERBS_ATTR_TYPE(__u32),
--- a/drivers/infiniband/hw/mlx5/devx.c
+++ b/drivers/infiniband/hw/mlx5/devx.c
@@ -1034,13 +1034,11 @@ DECLARE_UVERBS_NAMED_METHOD(
 		MLX5_IB_ATTR_DEVX_OTHER_CMD_IN,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_in_cmd_hdr)),
 		UA_MANDATORY,
-		UA_MIN_SZ_OR_ZERO,
 		UA_ALLOC_AND_COPY),
 	UVERBS_ATTR_PTR_OUT(
 		MLX5_IB_ATTR_DEVX_OTHER_CMD_OUT,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_out_cmd_hdr)),
-		UA_MANDATORY,
-		UA_MIN_SZ_OR_ZERO));
+		UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_OBJ_CREATE,
@@ -1052,13 +1050,11 @@ DECLARE_UVERBS_NAMED_METHOD(
 		MLX5_IB_ATTR_DEVX_OBJ_CREATE_CMD_IN,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_in_cmd_hdr)),
 		UA_MANDATORY,
-		UA_MIN_SZ_OR_ZERO,
 		UA_ALLOC_AND_COPY),
 	UVERBS_ATTR_PTR_OUT(
 		MLX5_IB_ATTR_DEVX_OBJ_CREATE_CMD_OUT,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_out_cmd_hdr)),
-		UA_MANDATORY,
-		UA_MIN_SZ_OR_ZERO));
+		UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_OBJ_DESTROY,
@@ -1077,13 +1073,11 @@ DECLARE_UVERBS_NAMED_METHOD(
 		MLX5_IB_ATTR_DEVX_OBJ_MODIFY_CMD_IN,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_in_cmd_hdr)),
 		UA_MANDATORY,
-		UA_MIN_SZ_OR_ZERO,
 		UA_ALLOC_AND_COPY),
 	UVERBS_ATTR_PTR_OUT(
 		MLX5_IB_ATTR_DEVX_OBJ_MODIFY_CMD_OUT,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_out_cmd_hdr)),
-		UA_MANDATORY,
-		UA_MIN_SZ_OR_ZERO));
+		UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_OBJ_QUERY,
@@ -1095,13 +1089,11 @@ DECLARE_UVERBS_NAMED_METHOD(
 		MLX5_IB_ATTR_DEVX_OBJ_QUERY_CMD_IN,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_in_cmd_hdr)),
 		UA_MANDATORY,
-		UA_MIN_SZ_OR_ZERO,
 		UA_ALLOC_AND_COPY),
 	UVERBS_ATTR_PTR_OUT(
 		MLX5_IB_ATTR_DEVX_OBJ_QUERY_CMD_OUT,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_out_cmd_hdr)),
-		UA_MANDATORY,
-		UA_MIN_SZ_OR_ZERO));
+		UA_MANDATORY));
 
 DECLARE_UVERBS_GLOBAL_METHODS(MLX5_IB_OBJECT_DEVX,
 			      &UVERBS_METHOD(MLX5_IB_METHOD_DEVX_OTHER),
--- a/include/rdma/uverbs_ioctl.h
+++ b/include/rdma/uverbs_ioctl.h
@@ -207,8 +207,11 @@ struct uverbs_object_tree_def {
 	.u.ptr.min_len = ((uintptr_t)(&((_type *)0)->_last + 1)), .u.ptr.len = sizeof(_type)
 #define UVERBS_ATTR_SIZE(_min_len, _len)			\
 	.u.ptr.min_len = _min_len, .u.ptr.len = _len
-#define UVERBS_ATTR_MIN_SIZE(_min_len)				\
-	UVERBS_ATTR_SIZE(_min_len, USHRT_MAX)
+/*
+ * Specifies at least min_len bytes must be passed in, but the amount can be
+ * larger, up to the protocol maximum size. No check for zeroing is done.
+ */
+#define UVERBS_ATTR_MIN_SIZE(_min_len) UVERBS_ATTR_SIZE(_min_len, USHRT_MAX)
 
 /* Must be used in the '...' of any UVERBS_ATTR */
 #define UA_ALLOC_AND_COPY .alloc_and_copy = 1
@@ -265,13 +268,11 @@ struct uverbs_object_tree_def {
  */
 #define UVERBS_ATTR_UHW()                                                      \
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_UHW_IN,                                 \
-			   UVERBS_ATTR_SIZE(0, USHRT_MAX),		       \
-			   UA_OPTIONAL,					       \
-			   UA_MIN_SZ_OR_ZERO),				       \
+			   UVERBS_ATTR_MIN_SIZE(0),			       \
+			   UA_OPTIONAL),				       \
 	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_UHW_OUT,                               \
-			    UVERBS_ATTR_SIZE(0, USHRT_MAX),		       \
-			    UA_OPTIONAL,				       \
-			    UA_MIN_SZ_OR_ZERO),				       \
+			    UVERBS_ATTR_MIN_SIZE(0),			       \
+			    UA_OPTIONAL)
 
 /*
  * =======================================
