From 38b4e09fbccab6457536563823222921c49601bb Mon Sep 17 00:00:00 2001
From: Jens Axboe <axboe@kernel.dk>
Date: Fri, 23 Aug 2019 12:49:00 -0600
Subject: [PATCH] null_blk: fix inline misuse
Git-commit: 38b4e09fbccab6457536563823222921c49601bb
Patch-mainline: v5.4-rc1
References: git fixes (block layer)

You can't magically mark a function inline and expect that to work.

Fixes: fceb5d1b19cb ("null_blk: create a helper for zoned devices")
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Signed-off-by: Coly Li <colyli@suse.de>

---
 drivers/block/null_blk.h       | 6 +++---
 drivers/block/null_blk_zoned.c | 5 ++---
 2 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/block/null_blk.h b/drivers/block/null_blk.h
index 4895c02e0c65..6fa3c07af63a 100644
--- a/drivers/block/null_blk.h
+++ b/drivers/block/null_blk.h
@@ -90,9 +90,9 @@ int null_zone_init(struct nullb_device *dev);
 void null_zone_exit(struct nullb_device *dev);
 int null_zone_report(struct gendisk *disk, sector_t sector,
 		     struct blk_zone *zones, unsigned int *nr_zones);
-inline blk_status_t null_handle_zoned(struct nullb_cmd *cmd,
-				      enum req_opf op, sector_t sector,
-				      sector_t nr_sectors);
+blk_status_t null_handle_zoned(struct nullb_cmd *cmd,
+				enum req_opf op, sector_t sector,
+				sector_t nr_sectors);
 #else
 static inline int null_zone_init(struct nullb_device *dev)
 {
diff --git a/drivers/block/null_blk_zoned.c b/drivers/block/null_blk_zoned.c
index 90092247e7eb..c07a05315e25 100644
--- a/drivers/block/null_blk_zoned.c
+++ b/drivers/block/null_blk_zoned.c
@@ -148,9 +148,8 @@ static blk_status_t null_zone_reset(struct nullb_cmd *cmd, sector_t sector)
 	return BLK_STS_OK;
 }
 
-inline blk_status_t null_handle_zoned(struct nullb_cmd *cmd,
-				       enum req_opf op, sector_t sector,
-				       sector_t nr_sectors)
+blk_status_t null_handle_zoned(struct nullb_cmd *cmd, enum req_opf op,
+			       sector_t sector, sector_t nr_sectors)
 {
 	switch (op) {
 	case REQ_OP_WRITE:
-- 
2.25.0

