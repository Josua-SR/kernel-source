From: Mikulas Patocka <mpatocka@redhat.com>
Date: Mon, 26 Aug 2019 02:41:17 -0400
Subject: dm zoned: fix invalid memory access
Git-commit: 0c8e9c2d668278652af028c3cc068c65f66342f4
Patch-mainline: 5.4-rc1
References: bnc#1151927 5.3.5

Commit 75d66ffb48efb30f2dd42f041ba8b39c5b2bd115 ("dm zoned: properly
handle backing device failure") triggers a coverity warning:

> *** CID 1452808:  Memory - illegal accesses  (USE_AFTER_FREE)
> /drivers/md/dm-zoned-target.c: 137 in dmz_submit_bio()
> 131             clone->bi_private = bioctx;
> 132
> 133             bio_advance(bio, clone->bi_iter.bi_size);
> 134
> 135             refcount_inc(&bioctx->ref);
> 136             generic_make_request(clone);
> >>>     CID 1452808:  Memory - illegal accesses  (USE_AFTER_FREE)
> >>>     Dereferencing freed pointer "clone".
> 137             if (clone->bi_status == BLK_STS_IOERR)
> 138                     return -EIO;
> 139
> 140             if (bio_op(bio) == REQ_OP_WRITE && dmz_is_seq(zone))
> 141                     zone->wp_block += nr_blocks;
> 142

The "clone" bio may be processed and freed before the check
"clone->bi_status == BLK_STS_IOERR" - so this check can access invalid
memory.

Fixes: 75d66ffb48efb3 ("dm zoned: properly handle backing device failure")
Cc: stable@vger.kernel.org
Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
Signed-off-by: Mike Snitzer <snitzer@redhat.com>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/md/dm-zoned-target.c |    2 --
 1 file changed, 2 deletions(-)

--- a/drivers/md/dm-zoned-target.c
+++ b/drivers/md/dm-zoned-target.c
@@ -134,8 +134,6 @@ static int dmz_submit_bio(struct dmz_tar
 
 	refcount_inc(&bioctx->ref);
 	generic_make_request(clone);
-	if (clone->bi_status == BLK_STS_IOERR)
-		return -EIO;
 
 	if (bio_op(bio) == REQ_OP_WRITE && dmz_is_seq(zone))
 		zone->wp_block += nr_blocks;
