From: Stefan Raspl <raspl@linux.ibm.com>
Subject: net/smc: longer delay when freeing client link groups
Patch-mainline: v4.18-rc1
Git-commit: 7f58a1ad5a9c203f25aa1f8947dc34751778e820
References: FATE#325694, LTC#167874, bsc#1113480

Summary:     net/smc: SMC-R MVP
Description: Add latest upstream patches to push SMC-R to the MVP level

Upstream-Description:

             net/smc: longer delay when freeing client link groups

             Client link group creation always follows the server linkgroup creation.
             If peer creates a new server link group, client has to create a new
             client link group. If peer reuses a server link group for a new
             connection, client has to reuse its client link group as well. To
             avoid out-of-sync conditions for link groups a longer delay for
             for client link group removal is defined to make sure this link group
             still exists, once the peer decides to reuse a server link group.

             Currently the client link group delay time is just 10 jiffies larger
             than the server link group delay time. This patch increases the delay
             difference to 10 seconds to have a better protection against
             out-of-sync link groups.

             Signed-off-by: Ursula Braun <ubraun@linux.ibm.com>
             Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Stefan Raspl <raspl@linux.ibm.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 net/smc/smc_core.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/net/smc/smc_core.c
+++ b/net/smc/smc_core.c
@@ -27,7 +27,7 @@
 
 #define SMC_LGR_NUM_INCR		256
 #define SMC_LGR_FREE_DELAY_SERV		(600 * HZ)
-#define SMC_LGR_FREE_DELAY_CLNT		(SMC_LGR_FREE_DELAY_SERV + 10)
+#define SMC_LGR_FREE_DELAY_CLNT		(SMC_LGR_FREE_DELAY_SERV + 10 * HZ)
 
 static struct smc_lgr_list smc_lgr_list = {	/* established link groups */
 	.lock = __SPIN_LOCK_UNLOCKED(smc_lgr_list.lock),
