From: Stefan Raspl <raspl@linux.ibm.com>
Subject: net/smc: no tx work trigger for fallback sockets
Patch-mainline: v4.18-rc1
Git-commit: 569bc643656826d5305aebdc5d5500c99881b2e5
References: FATE#325694, LTC#167874, bsc#1113480

Summary:     net/smc: SMC-R MVP
Description: Add latest upstream patches to push SMC-R to the MVP level

Upstream-Description:

             net/smc: no tx work trigger for fallback sockets

             If TCP_NODELAY is set or TCP_CORK is reset, setsockopt triggers the
             tx worker. This does not make sense, if the SMC socket switched to
             the TCP fallback when the connection is created. This patch adds
             the additional check for the fallback case.

             Signed-off-by: Ursula Braun <ubraun@linux.ibm.com>
             Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Stefan Raspl <raspl@linux.ibm.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 net/smc/af_smc.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/net/smc/af_smc.c
+++ b/net/smc/af_smc.c
@@ -1351,14 +1351,14 @@ static int smc_setsockopt(struct socket
 		break;
 	case TCP_NODELAY:
 		if (sk->sk_state != SMC_INIT && sk->sk_state != SMC_LISTEN) {
-			if (val)
+			if (val && !smc->use_fallback)
 				mod_delayed_work(system_wq, &smc->conn.tx_work,
 						 0);
 		}
 		break;
 	case TCP_CORK:
 		if (sk->sk_state != SMC_INIT && sk->sk_state != SMC_LISTEN) {
-			if (!val)
+			if (!val && !smc->use_fallback)
 				mod_delayed_work(system_wq, &smc->conn.tx_work,
 						 0);
 		}
