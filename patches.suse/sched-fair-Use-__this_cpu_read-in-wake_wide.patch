From: Muchun Song <songmuchun@bytedance.com>
Date: Wed, 22 Apr 2020 11:29:09 +0100
Subject: [PATCH] sched/fair: Use __this_cpu_read() in wake_wide()

References: bnc#1155798 (CPU scheduler functional and performance backports)
Patch-mainline: Submitted, https://lore.kernel.org/lkml/20200421144123.33580-1-songmuchun@bytedance.com/

The code is executed with preemption(and interrupts) disabled,
so it's safe to use __this_cpu_write().

Signed-off-by: Muchun Song <songmuchun@bytedance.com>
Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 kernel/sched/fair.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 32a98ada2b36..16864566bf6d 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -5710,7 +5710,7 @@ static int wake_wide(struct task_struct *p)
 {
 	unsigned int master = current->wakee_flips;
 	unsigned int slave = p->wakee_flips;
-	int factor = this_cpu_read(sd_llc_size);
+	int factor = __this_cpu_read(sd_llc_size);
 
 	if (master < slave)
 		swap(master, slave);
