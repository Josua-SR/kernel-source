From: Jason Gunthorpe <jgg@mellanox.com>
Date: Wed, 4 Jul 2018 08:50:29 +0300
Subject: RDMA/uverbs: Remove UA_FLAGS
Patch-mainline: v4.19-rc1
Git-commit: 83bb4442330f035bd68ec5d2f5b87bfef1c1a4ab
References: bsc#1103992 FATE#326009

This bit of boilerplate isn't really necessary, we can use bitfields
instead of a flags enum and the macros can then individually initialize
them through the __VA_ARGS__ like everything else.

Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/infiniband/core/uverbs_ioctl.c                 |   10 +-
 drivers/infiniband/core/uverbs_ioctl_merge.c           |    6 -
 drivers/infiniband/core/uverbs_std_types_counters.c    |   10 +-
 drivers/infiniband/core/uverbs_std_types_cq.c          |   17 ++--
 drivers/infiniband/core/uverbs_std_types_dm.c          |    8 +-
 drivers/infiniband/core/uverbs_std_types_flow_action.c |   40 ++++++----
 drivers/infiniband/core/uverbs_std_types_mr.c          |   16 ++--
 drivers/infiniband/hw/mlx5/devx.c                      |   68 ++++++++---------
 drivers/infiniband/hw/mlx5/main.c                      |    6 -
 include/rdma/uverbs_ioctl.h                            |   35 +++++---
 10 files changed, 115 insertions(+), 101 deletions(-)

--- a/drivers/infiniband/core/uverbs_ioctl.c
+++ b/drivers/infiniband/core/uverbs_ioctl.c
@@ -98,14 +98,14 @@ static int uverbs_process_attr(struct ib
 		 * non-zero content, making ABI compat/discovery simpler.
 		 */
 		if (uattr->len > val_spec->u.ptr.len &&
-		    val_spec->flags & UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO &&
+		    val_spec->min_sz_or_zero &&
 		    !uverbs_is_attr_cleared(uattr, val_spec->u.ptr.len))
 			return -EOPNOTSUPP;
 
 	/* fall through */
 	case UVERBS_ATTR_TYPE_PTR_OUT:
 		if (uattr->len < val_spec->u.ptr.min_len ||
-		    (!(val_spec->flags & UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO) &&
+		    (!val_spec->min_sz_or_zero &&
 		     uattr->len > val_spec->u.ptr.len))
 			return -EINVAL;
 
@@ -116,8 +116,7 @@ static int uverbs_process_attr(struct ib
 		e->ptr_attr.len = uattr->len;
 		e->ptr_attr.flags = uattr->flags;
 
-		if (val_spec->flags & UVERBS_ATTR_SPEC_F_ALLOC_AND_COPY &&
-		    !uverbs_attr_ptr_is_inline(e)) {
+		if (val_spec->alloc_and_copy && !uverbs_attr_ptr_is_inline(e)) {
 			void *p;
 
 			p = kvmalloc(uattr->len, GFP_KERNEL);
@@ -220,8 +219,7 @@ static int uverbs_finalize_attrs(struct
 				if (!ret)
 					ret = current_ret;
 			} else if (spec->type == UVERBS_ATTR_TYPE_PTR_IN &&
-				   spec->flags &
-					   UVERBS_ATTR_SPEC_F_ALLOC_AND_COPY &&
+				   spec->alloc_and_copy &&
 				   !uverbs_attr_ptr_is_inline(attr)) {
 				kvfree(attr->ptr_attr.ptr);
 			}
--- a/drivers/infiniband/core/uverbs_ioctl_merge.c
+++ b/drivers/infiniband/core/uverbs_ioctl_merge.c
@@ -375,18 +375,18 @@ static struct uverbs_method_spec *build_
 				 "ib_uverbs: Method contains more than one object attr (%d) with new/destroy access\n",
 				 min_id) ||
 			    WARN(attr_obj_with_special_access &&
-				 !(attr->flags & UVERBS_ATTR_SPEC_F_MANDATORY),
+				 !attr->mandatory,
 				 "ib_uverbs: Tried to merge attr (%d) but it's an object with new/destroy access but isn't mandatory\n",
 				 min_id) ||
 			    WARN(IS_ATTR_OBJECT(attr) &&
-				 attr->flags & UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO,
+				 attr->min_sz_or_zero,
 				 "ib_uverbs: Tried to merge attr (%d) but it's an object with min_sz flag\n",
 				 min_id)) {
 				res = -EINVAL;
 				goto free;
 			}
 
-			if (attr->flags & UVERBS_ATTR_SPEC_F_MANDATORY)
+			if (attr->mandatory)
 				set_bit(min_id, hash->mandatory_attrs_bitmask);
 			min_id++;
 
--- a/drivers/infiniband/core/uverbs_std_types_counters.c
+++ b/drivers/infiniband/core/uverbs_std_types_counters.c
@@ -129,14 +129,14 @@ DECLARE_UVERBS_NAMED_METHOD(
 	UVERBS_ATTR_IDR(UVERBS_ATTR_CREATE_COUNTERS_HANDLE,
 			UVERBS_OBJECT_COUNTERS,
 			UVERBS_ACCESS_NEW,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_METHOD_DESTROY(
 	UVERBS_METHOD_COUNTERS_DESTROY,
 	UVERBS_ATTR_IDR(UVERBS_ATTR_DESTROY_COUNTERS_HANDLE,
 			UVERBS_OBJECT_COUNTERS,
 			UVERBS_ACCESS_DESTROY,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			UA_MANDATORY));
 
 #define MAX_COUNTERS_BUFF_SIZE USHRT_MAX
 DECLARE_UVERBS_NAMED_METHOD(
@@ -144,13 +144,13 @@ DECLARE_UVERBS_NAMED_METHOD(
 	UVERBS_ATTR_IDR(UVERBS_ATTR_READ_COUNTERS_HANDLE,
 			UVERBS_OBJECT_COUNTERS,
 			UVERBS_ACCESS_READ,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_READ_COUNTERS_BUFF,
 			    UVERBS_ATTR_SIZE(0, MAX_COUNTERS_BUFF_SIZE),
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			    UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_READ_COUNTERS_FLAGS,
 			   UVERBS_ATTR_TYPE(__u32),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			   UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_OBJECT(UVERBS_OBJECT_COUNTERS,
 			    UVERBS_TYPE_ALLOC_IDR(uverbs_free_counters),
--- a/drivers/infiniband/core/uverbs_std_types_cq.c
+++ b/drivers/infiniband/core/uverbs_std_types_cq.c
@@ -152,23 +152,24 @@ DECLARE_UVERBS_NAMED_METHOD(
 	UVERBS_ATTR_IDR(UVERBS_ATTR_CREATE_CQ_HANDLE,
 			UVERBS_OBJECT_CQ,
 			UVERBS_ACCESS_NEW,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_CREATE_CQ_CQE,
 			   UVERBS_ATTR_TYPE(u32),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_CREATE_CQ_USER_HANDLE,
 			   UVERBS_ATTR_TYPE(u64),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_FD(UVERBS_ATTR_CREATE_CQ_COMP_CHANNEL,
 		       UVERBS_OBJECT_COMP_CHANNEL,
-		       UVERBS_ACCESS_READ),
+		       UVERBS_ACCESS_READ,
+		       UA_OPTIONAL),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_CREATE_CQ_COMP_VECTOR,
 			   UVERBS_ATTR_TYPE(u32),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_CREATE_CQ_FLAGS, UVERBS_ATTR_TYPE(u32)),
 	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_CREATE_CQ_RESP_CQE,
 			    UVERBS_ATTR_TYPE(u32),
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			    UA_MANDATORY),
 	UVERBS_ATTR_UHW());
 
 static int UVERBS_HANDLER(UVERBS_METHOD_CQ_DESTROY)(struct ib_device *ib_dev,
@@ -205,10 +206,10 @@ DECLARE_UVERBS_NAMED_METHOD(
 	UVERBS_ATTR_IDR(UVERBS_ATTR_DESTROY_CQ_HANDLE,
 			UVERBS_OBJECT_CQ,
 			UVERBS_ACCESS_DESTROY,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_DESTROY_CQ_RESP,
 			    UVERBS_ATTR_TYPE(struct ib_uverbs_destroy_cq_resp),
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			    UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_OBJECT(
 	UVERBS_OBJECT_CQ,
--- a/drivers/infiniband/core/uverbs_std_types_dm.c
+++ b/drivers/infiniband/core/uverbs_std_types_dm.c
@@ -90,20 +90,20 @@ DECLARE_UVERBS_NAMED_METHOD(
 	UVERBS_ATTR_IDR(UVERBS_ATTR_ALLOC_DM_HANDLE,
 			UVERBS_OBJECT_DM,
 			UVERBS_ACCESS_NEW,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_ALLOC_DM_LENGTH,
 			   UVERBS_ATTR_TYPE(u64),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_ALLOC_DM_ALIGNMENT,
 			   UVERBS_ATTR_TYPE(u32),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			   UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_METHOD_DESTROY(
 	UVERBS_METHOD_DM_FREE,
 	UVERBS_ATTR_IDR(UVERBS_ATTR_FREE_DM_HANDLE,
 			UVERBS_OBJECT_DM,
 			UVERBS_ACCESS_DESTROY,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_OBJECT(UVERBS_OBJECT_DM,
 			    UVERBS_TYPE_ALLOC_IDR(uverbs_free_dm),
--- a/drivers/infiniband/core/uverbs_std_types_flow_action.c
+++ b/drivers/infiniband/core/uverbs_std_types_flow_action.c
@@ -368,7 +368,7 @@ static const struct uverbs_attr_spec uve
 	[IB_UVERBS_FLOW_ACTION_ESP_KEYMAT_AES_GCM] = {
 		.type = UVERBS_ATTR_TYPE_PTR_IN,
 		UVERBS_ATTR_TYPE(struct ib_uverbs_flow_action_esp_keymat_aes_gcm),
-		UA_FLAGS(UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO),
+		UA_MIN_SZ_OR_ZERO
 	},
 };
 
@@ -381,7 +381,7 @@ static const struct uverbs_attr_spec uve
 	[IB_UVERBS_FLOW_ACTION_ESP_REPLAY_BMP] = {
 		.type = UVERBS_ATTR_TYPE_PTR_IN,
 		UVERBS_ATTR_STRUCT(struct ib_uverbs_flow_action_esp_replay_bmp, size),
-		UA_FLAGS(UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO),
+		UA_MIN_SZ_OR_ZERO
 	},
 };
 
@@ -390,51 +390,59 @@ DECLARE_UVERBS_NAMED_METHOD(
 	UVERBS_ATTR_IDR(UVERBS_ATTR_CREATE_FLOW_ACTION_ESP_HANDLE,
 			UVERBS_OBJECT_FLOW_ACTION,
 			UVERBS_ACCESS_NEW,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_FLOW_ACTION_ESP_ATTRS,
 			   UVERBS_ATTR_STRUCT(struct ib_uverbs_flow_action_esp,
 					      hard_limit_pkts),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY |
-				    UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO)),
+			   UA_MANDATORY,
+			   UA_MIN_SZ_OR_ZERO),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_FLOW_ACTION_ESP_ESN,
-			   UVERBS_ATTR_TYPE(__u32)),
+			   UVERBS_ATTR_TYPE(__u32),
+			   UA_OPTIONAL),
 	UVERBS_ATTR_ENUM_IN(UVERBS_ATTR_FLOW_ACTION_ESP_KEYMAT,
 			    uverbs_flow_action_esp_keymat,
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			    UA_MANDATORY),
 	UVERBS_ATTR_ENUM_IN(UVERBS_ATTR_FLOW_ACTION_ESP_REPLAY,
-			    uverbs_flow_action_esp_replay),
+			    uverbs_flow_action_esp_replay,
+			    UA_OPTIONAL),
 	UVERBS_ATTR_PTR_IN(
 		UVERBS_ATTR_FLOW_ACTION_ESP_ENCAP,
 		UVERBS_ATTR_STRUCT(struct ib_uverbs_flow_action_esp_encap,
-				   type)));
+				   type),
+		UA_OPTIONAL));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	UVERBS_METHOD_FLOW_ACTION_ESP_MODIFY,
 	UVERBS_ATTR_IDR(UVERBS_ATTR_MODIFY_FLOW_ACTION_ESP_HANDLE,
 			UVERBS_OBJECT_FLOW_ACTION,
 			UVERBS_ACCESS_WRITE,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_FLOW_ACTION_ESP_ATTRS,
 			   UVERBS_ATTR_STRUCT(struct ib_uverbs_flow_action_esp,
 					      hard_limit_pkts),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO)),
+			   UA_OPTIONAL,
+			   UA_MIN_SZ_OR_ZERO),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_FLOW_ACTION_ESP_ESN,
-			   UVERBS_ATTR_TYPE(__u32)),
+			   UVERBS_ATTR_TYPE(__u32),
+			   UA_OPTIONAL),
 	UVERBS_ATTR_ENUM_IN(UVERBS_ATTR_FLOW_ACTION_ESP_KEYMAT,
-			    uverbs_flow_action_esp_keymat),
+			    uverbs_flow_action_esp_keymat,
+			    UA_OPTIONAL),
 	UVERBS_ATTR_ENUM_IN(UVERBS_ATTR_FLOW_ACTION_ESP_REPLAY,
-			    uverbs_flow_action_esp_replay),
+			    uverbs_flow_action_esp_replay,
+			    UA_OPTIONAL),
 	UVERBS_ATTR_PTR_IN(
 		UVERBS_ATTR_FLOW_ACTION_ESP_ENCAP,
 		UVERBS_ATTR_STRUCT(struct ib_uverbs_flow_action_esp_encap,
-				   type)));
+				   type),
+		UA_OPTIONAL));
 
 DECLARE_UVERBS_NAMED_METHOD_DESTROY(
 	UVERBS_METHOD_FLOW_ACTION_DESTROY,
 	UVERBS_ATTR_IDR(UVERBS_ATTR_DESTROY_FLOW_ACTION_HANDLE,
 			UVERBS_OBJECT_FLOW_ACTION,
 			UVERBS_ACCESS_DESTROY,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_OBJECT(
 	UVERBS_OBJECT_FLOW_ACTION,
--- a/drivers/infiniband/core/uverbs_std_types_mr.c
+++ b/drivers/infiniband/core/uverbs_std_types_mr.c
@@ -120,30 +120,30 @@ DECLARE_UVERBS_NAMED_METHOD(
 	UVERBS_ATTR_IDR(UVERBS_ATTR_REG_DM_MR_HANDLE,
 			UVERBS_OBJECT_MR,
 			UVERBS_ACCESS_NEW,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_REG_DM_MR_OFFSET,
 			   UVERBS_ATTR_TYPE(u64),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_REG_DM_MR_LENGTH,
 			   UVERBS_ATTR_TYPE(u64),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_IDR(UVERBS_ATTR_REG_DM_MR_PD_HANDLE,
 			UVERBS_OBJECT_PD,
 			UVERBS_ACCESS_READ,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_REG_DM_MR_ACCESS_FLAGS,
 			   UVERBS_ATTR_TYPE(u32),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_IDR(UVERBS_ATTR_REG_DM_MR_DM_HANDLE,
 			UVERBS_OBJECT_DM,
 			UVERBS_ACCESS_READ,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_REG_DM_MR_RESP_LKEY,
 			    UVERBS_ATTR_TYPE(u32),
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			    UA_MANDATORY),
 	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_REG_DM_MR_RESP_RKEY,
 			    UVERBS_ATTR_TYPE(u32),
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			    UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_OBJECT(
 	UVERBS_OBJECT_MR,
--- a/drivers/infiniband/hw/mlx5/devx.c
+++ b/drivers/infiniband/hw/mlx5/devx.c
@@ -989,119 +989,119 @@ DECLARE_UVERBS_NAMED_METHOD(
 	UVERBS_ATTR_IDR(MLX5_IB_ATTR_DEVX_UMEM_REG_HANDLE,
 			MLX5_IB_OBJECT_DEVX_UMEM,
 			UVERBS_ACCESS_NEW,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(MLX5_IB_ATTR_DEVX_UMEM_REG_ADDR,
 			   UVERBS_ATTR_TYPE(u64),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(MLX5_IB_ATTR_DEVX_UMEM_REG_LEN,
 			   UVERBS_ATTR_TYPE(u64),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(MLX5_IB_ATTR_DEVX_UMEM_REG_ACCESS,
 			   UVERBS_ATTR_TYPE(u32),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_PTR_OUT(MLX5_IB_ATTR_DEVX_UMEM_REG_OUT_ID,
 			    UVERBS_ATTR_TYPE(u32),
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			    UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_UMEM_DEREG,
 	UVERBS_ATTR_IDR(MLX5_IB_ATTR_DEVX_UMEM_DEREG_HANDLE,
 			MLX5_IB_OBJECT_DEVX_UMEM,
 			UVERBS_ACCESS_DESTROY,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_QUERY_EQN,
 	UVERBS_ATTR_PTR_IN(MLX5_IB_ATTR_DEVX_QUERY_EQN_USER_VEC,
 			   UVERBS_ATTR_TYPE(u32),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_PTR_OUT(MLX5_IB_ATTR_DEVX_QUERY_EQN_DEV_EQN,
 			    UVERBS_ATTR_TYPE(u32),
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			    UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_QUERY_UAR,
 	UVERBS_ATTR_PTR_IN(MLX5_IB_ATTR_DEVX_QUERY_UAR_USER_IDX,
 			   UVERBS_ATTR_TYPE(u32),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			   UA_MANDATORY),
 	UVERBS_ATTR_PTR_OUT(MLX5_IB_ATTR_DEVX_QUERY_UAR_DEV_IDX,
 			    UVERBS_ATTR_TYPE(u32),
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			    UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_OTHER,
 	UVERBS_ATTR_PTR_IN(
 		MLX5_IB_ATTR_DEVX_OTHER_CMD_IN,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_in_cmd_hdr)),
-		UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY |
-			 UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO |
-			 UVERBS_ATTR_SPEC_F_ALLOC_AND_COPY)),
+		UA_MANDATORY,
+		UA_MIN_SZ_OR_ZERO,
+		UA_ALLOC_AND_COPY),
 	UVERBS_ATTR_PTR_OUT(
 		MLX5_IB_ATTR_DEVX_OTHER_CMD_OUT,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_out_cmd_hdr)),
-		UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY |
-			 UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO)));
+		UA_MANDATORY,
+		UA_MIN_SZ_OR_ZERO));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_OBJ_CREATE,
 	UVERBS_ATTR_IDR(MLX5_IB_ATTR_DEVX_OBJ_CREATE_HANDLE,
 			MLX5_IB_OBJECT_DEVX_OBJ,
 			UVERBS_ACCESS_NEW,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(
 		MLX5_IB_ATTR_DEVX_OBJ_CREATE_CMD_IN,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_in_cmd_hdr)),
-		UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY |
-			 UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO |
-			 UVERBS_ATTR_SPEC_F_ALLOC_AND_COPY)),
+		UA_MANDATORY,
+		UA_MIN_SZ_OR_ZERO,
+		UA_ALLOC_AND_COPY),
 	UVERBS_ATTR_PTR_OUT(
 		MLX5_IB_ATTR_DEVX_OBJ_CREATE_CMD_OUT,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_out_cmd_hdr)),
-		UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY |
-			 UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO)));
+		UA_MANDATORY,
+		UA_MIN_SZ_OR_ZERO));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_OBJ_DESTROY,
 	UVERBS_ATTR_IDR(MLX5_IB_ATTR_DEVX_OBJ_DESTROY_HANDLE,
 			MLX5_IB_OBJECT_DEVX_OBJ,
 			UVERBS_ACCESS_DESTROY,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			UA_MANDATORY));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_OBJ_MODIFY,
 	UVERBS_ATTR_IDR(MLX5_IB_ATTR_DEVX_OBJ_MODIFY_HANDLE,
 			MLX5_IB_OBJECT_DEVX_OBJ,
 			UVERBS_ACCESS_WRITE,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(
 		MLX5_IB_ATTR_DEVX_OBJ_MODIFY_CMD_IN,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_in_cmd_hdr)),
-		UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY |
-			 UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO |
-			 UVERBS_ATTR_SPEC_F_ALLOC_AND_COPY)),
+		UA_MANDATORY,
+		UA_MIN_SZ_OR_ZERO,
+		UA_ALLOC_AND_COPY),
 	UVERBS_ATTR_PTR_OUT(
 		MLX5_IB_ATTR_DEVX_OBJ_MODIFY_CMD_OUT,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_out_cmd_hdr)),
-		UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY |
-			 UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO)));
+		UA_MANDATORY,
+		UA_MIN_SZ_OR_ZERO));
 
 DECLARE_UVERBS_NAMED_METHOD(
 	MLX5_IB_METHOD_DEVX_OBJ_QUERY,
 	UVERBS_ATTR_IDR(MLX5_IB_ATTR_DEVX_OBJ_QUERY_HANDLE,
 			MLX5_IB_OBJECT_DEVX_OBJ,
 			UVERBS_ACCESS_READ,
-			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			UA_MANDATORY),
 	UVERBS_ATTR_PTR_IN(
 		MLX5_IB_ATTR_DEVX_OBJ_QUERY_CMD_IN,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_in_cmd_hdr)),
-		UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY |
-			 UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO |
-			 UVERBS_ATTR_SPEC_F_ALLOC_AND_COPY)),
+		UA_MANDATORY,
+		UA_MIN_SZ_OR_ZERO,
+		UA_ALLOC_AND_COPY),
 	UVERBS_ATTR_PTR_OUT(
 		MLX5_IB_ATTR_DEVX_OBJ_QUERY_CMD_OUT,
 		UVERBS_ATTR_MIN_SIZE(MLX5_ST_SZ_BYTES(general_obj_out_cmd_hdr)),
-		UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY |
-			 UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO)));
+		UA_MANDATORY,
+		UA_MIN_SZ_OR_ZERO));
 
 DECLARE_UVERBS_GLOBAL_METHODS(MLX5_IB_OBJECT_DEVX,
 			      &UVERBS_METHOD(MLX5_IB_METHOD_DEVX_OTHER),
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@ -5326,10 +5326,10 @@ ADD_UVERBS_ATTRIBUTES_SIMPLE(
 	UVERBS_METHOD_DM_ALLOC,
 	UVERBS_ATTR_PTR_OUT(MLX5_IB_ATTR_ALLOC_DM_RESP_START_OFFSET,
 			    UVERBS_ATTR_TYPE(u64),
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
+			    UA_MANDATORY),
 	UVERBS_ATTR_PTR_OUT(MLX5_IB_ATTR_ALLOC_DM_RESP_PAGE_INDEX,
 			    UVERBS_ATTR_TYPE(u16),
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			    UA_MANDATORY));
 
 ADD_UVERBS_ATTRIBUTES_SIMPLE(
 	mlx5_ib_flow_action,
@@ -5337,7 +5337,7 @@ ADD_UVERBS_ATTRIBUTES_SIMPLE(
 	UVERBS_METHOD_FLOW_ACTION_ESP_CREATE,
 	UVERBS_ATTR_PTR_IN(MLX5_IB_ATTR_CREATE_FLOW_ACTION_FLAGS,
 			   UVERBS_ATTR_TYPE(u64),
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)));
+			   UA_MANDATORY));
 
 #define NUM_TREES	3
 static int populate_specs_root(struct mlx5_ib_dev *dev)
--- a/include/rdma/uverbs_ioctl.h
+++ b/include/rdma/uverbs_ioctl.h
@@ -61,20 +61,22 @@ enum uverbs_obj_access {
 	UVERBS_ACCESS_DESTROY
 };
 
-enum {
-	UVERBS_ATTR_SPEC_F_MANDATORY	= 1U << 0,
-	/* Support extending attributes by length, validate all unknown size == zero  */
-	UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO = 1U << 1,
-	/*
-	 * Valid only for PTR_IN. Allocate and copy the data inside the parser
-	 */
-	UVERBS_ATTR_SPEC_F_ALLOC_AND_COPY = 1U << 2,
-};
-
 /* Specification of a single attribute inside the ioctl message */
+/* good size 16 */
 struct uverbs_attr_spec {
 	u8 type;
-	u8 flags;
+
+	/*
+	 * Support extending attributes by length, validate all
+	 * unknown size == zero
+	 */
+	u8 min_sz_or_zero:1;
+	/*
+	 * Valid only for PTR_IN. Allocate and copy the data inside
+	 * the parser
+	 */
+	u8 alloc_and_copy:1;
+	u8 mandatory:1;
 
 	union {
 		struct {
@@ -209,7 +211,10 @@ struct uverbs_object_tree_def {
 	UVERBS_ATTR_SIZE(_min_len, USHRT_MAX)
 
 /* Must be used in the '...' of any UVERBS_ATTR */
-#define UA_FLAGS(_flags) .flags = _flags
+#define UA_ALLOC_AND_COPY .alloc_and_copy = 1
+#define UA_MANDATORY .mandatory = 1
+#define UA_MIN_SZ_OR_ZERO .min_sz_or_zero = 1
+#define UA_OPTIONAL .mandatory = 0
 
 #define UVERBS_ATTR_IDR(_attr_id, _idr_type, _access, ...)                     \
 	(&(const struct uverbs_attr_def){                                      \
@@ -261,10 +266,12 @@ struct uverbs_object_tree_def {
 #define UVERBS_ATTR_UHW()                                                      \
 	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_UHW_IN,                                 \
 			   UVERBS_ATTR_SIZE(0, USHRT_MAX),		       \
-			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO)),       \
+			   UA_OPTIONAL,					       \
+			   UA_MIN_SZ_OR_ZERO),				       \
 	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_UHW_OUT,                               \
 			    UVERBS_ATTR_SIZE(0, USHRT_MAX),		       \
-			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO))
+			    UA_OPTIONAL,				       \
+			    UA_MIN_SZ_OR_ZERO),				       \
 
 /*
  * =======================================
