From: Takashi Iwai <tiwai@suse.de>
Subject: [PATCH] fs/cachefiles: Drop superfluous readpages aops NULL check
Date: Thu, 27 Aug 2020 16:27:24 +0200
Message-id: <20200827142724.15032-1-tiwai@suse.de>
Patch-mainline: Submitted, LKML
References: bsc#1175245

After the recent actions to convert readpages aops to readahead, the
NULL checks of readpages aops in cachefiles_read_or_alloc_page() may
hit falsely.  More badly, it's an ASSERT() call, and this panics.

Drop the superfluous NULL checks for fixing this regression.

Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=208883
Buglink: https://bugzilla.opensuse.org/show_bug.cgi?id=1175245
Cc: <stable@vger.kernel.org> # v5.8
Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 fs/cachefiles/rdwr.c | 2 --
 1 file changed, 2 deletions(-)

diff --git a/fs/cachefiles/rdwr.c b/fs/cachefiles/rdwr.c
index 3080cda9e824..5b4cee71fa32 100644
--- a/fs/cachefiles/rdwr.c
+++ b/fs/cachefiles/rdwr.c
@@ -412,7 +412,6 @@ int cachefiles_read_or_alloc_page(struct fscache_retrieval *op,
 
 	inode = d_backing_inode(object->backer);
 	ASSERT(S_ISREG(inode->i_mode));
-	ASSERT(inode->i_mapping->a_ops->readpages);
 
 	/* calculate the shift required to use bmap */
 	shift = PAGE_SHIFT - inode->i_sb->s_blocksize_bits;
@@ -712,7 +711,6 @@ int cachefiles_read_or_alloc_pages(struct fscache_retrieval *op,
 
 	inode = d_backing_inode(object->backer);
 	ASSERT(S_ISREG(inode->i_mode));
-	ASSERT(inode->i_mapping->a_ops->readpages);
 
 	/* calculate the shift required to use bmap */
 	shift = PAGE_SHIFT - inode->i_sb->s_blocksize_bits;
-- 
2.16.4

