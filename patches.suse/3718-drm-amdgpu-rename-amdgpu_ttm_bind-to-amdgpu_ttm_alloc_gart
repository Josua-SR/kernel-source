From: =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>
Date: Fri, 27 Oct 2017 15:43:14 +0200
Subject: drm/amdgpu: rename amdgpu_ttm_bind to amdgpu_ttm_alloc_gart
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Git-commit: c5835bbb1195996c6c5bf2bf2cdbae08c936fc93
Patch-mainline: v4.16-rc1
References: FATE#326289 FATE#326079 FATE#326049 FATE#322398 FATE#326166

We actually don't bind here, but rather allocate GART space if necessary.

Signed-off-by: Christian KÃ¶nig <christian.koenig@amd.com>
Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_cs.c     |    4 ++--
 drivers/gpu/drm/amd/amdgpu/amdgpu_object.c |    2 +-
 drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c    |    4 ++--
 drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.h    |    2 +-
 4 files changed, 6 insertions(+), 6 deletions(-)

--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_cs.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_cs.c
@@ -684,7 +684,7 @@ static int amdgpu_cs_parser_bos(struct a
 	if (!r && p->uf_entry.robj) {
 		struct amdgpu_bo *uf = p->uf_entry.robj;
 
-		r = amdgpu_ttm_bind(&uf->tbo);
+		r = amdgpu_ttm_alloc_gart(&uf->tbo);
 		p->job->uf_addr += amdgpu_bo_gpu_offset(uf);
 	}
 
@@ -1601,5 +1601,5 @@ int amdgpu_cs_find_mapping(struct amdgpu
 			return r;
 	}
 
-	return amdgpu_ttm_bind(&(*bo)->tbo);
+	return amdgpu_ttm_alloc_gart(&(*bo)->tbo);
 }
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_object.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_object.c
@@ -688,7 +688,7 @@ int amdgpu_bo_pin_restricted(struct amdg
 		goto error;
 	}
 
-	r = amdgpu_ttm_bind(&bo->tbo);
+	r = amdgpu_ttm_alloc_gart(&bo->tbo);
 	if (unlikely(r)) {
 		dev_err(adev->dev, "%p bind failed\n", bo);
 		goto error;
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c
@@ -875,7 +875,7 @@ static int amdgpu_ttm_backend_bind(struc
 	return r;
 }
 
-int amdgpu_ttm_bind(struct ttm_buffer_object *bo)
+int amdgpu_ttm_alloc_gart(struct ttm_buffer_object *bo)
 {
 	struct amdgpu_device *adev = amdgpu_ttm_adev(bo->bdev);
 	struct ttm_mem_reg tmp;
@@ -1602,7 +1602,7 @@ int amdgpu_fill_buffer(struct amdgpu_bo
 	}
 
 	if (bo->tbo.mem.mem_type == TTM_PL_TT) {
-		r = amdgpu_ttm_bind(&bo->tbo);
+		r = amdgpu_ttm_alloc_gart(&bo->tbo);
 		if (r)
 			return r;
 	}
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.h
@@ -91,7 +91,7 @@ int amdgpu_fill_buffer(struct amdgpu_bo
 			struct dma_fence **fence);
 
 int amdgpu_mmap(struct file *filp, struct vm_area_struct *vma);
-int amdgpu_ttm_bind(struct ttm_buffer_object *bo);
+int amdgpu_ttm_alloc_gart(struct ttm_buffer_object *bo);
 int amdgpu_ttm_recover_gart(struct ttm_buffer_object *tbo);
 
 int amdgpu_ttm_tt_get_user_pages(struct ttm_tt *ttm, struct page **pages);
