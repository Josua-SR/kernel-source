From: Ben Skeggs <bskeggs@redhat.com>
Date: Tue, 8 May 2018 20:39:47 +1000
Subject: drm/nouveau/kms/nv50-: allow specification of valid heads for a window
Git-commit: 9d6c2fe1917fc5ba6a9e8586ca16d007410baf42
Patch-mainline: v4.18-rc1
References: FATE#326289 FATE#326079 FATE#326049 FATE#322398 FATE#326166

This will be required to support Volta, where window ID != head.

Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 drivers/gpu/drm/nouveau/dispnv50/base507c.c |    2 +-
 drivers/gpu/drm/nouveau/dispnv50/curs507a.c |    2 +-
 drivers/gpu/drm/nouveau/dispnv50/ovly507e.c |    2 +-
 drivers/gpu/drm/nouveau/dispnv50/wndw.c     |    4 ++--
 drivers/gpu/drm/nouveau/dispnv50/wndw.h     |    2 +-
 5 files changed, 6 insertions(+), 6 deletions(-)

--- a/drivers/gpu/drm/nouveau/dispnv50/base507c.c
+++ b/drivers/gpu/drm/nouveau/dispnv50/base507c.c
@@ -251,7 +251,7 @@ base507c_new_(const struct nv50_wndw_fun
 	int ret;
 
 	ret = nv50_wndw_new_(func, drm->dev, DRM_PLANE_TYPE_PRIMARY,
-			     "base", head, format, &wndw);
+			     "base", head, format, BIT(head), &wndw);
 	if (*pwndw = wndw, ret)
 		return ret;
 
--- a/drivers/gpu/drm/nouveau/dispnv50/curs507a.c
+++ b/drivers/gpu/drm/nouveau/dispnv50/curs507a.c
@@ -126,7 +126,7 @@ curs507a_new_(const struct nv50_wimm_fun
 	int ret;
 
 	ret = nv50_wndw_new_(&curs507a_wndw, drm->dev, DRM_PLANE_TYPE_CURSOR,
-			     "curs", head, curs507a_format, &wndw);
+			     "curs", head, curs507a_format, BIT(head), &wndw);
 	if (*pwndw = wndw, ret)
 		return ret;
 
--- a/drivers/gpu/drm/nouveau/dispnv50/ovly507e.c
+++ b/drivers/gpu/drm/nouveau/dispnv50/ovly507e.c
@@ -47,7 +47,7 @@ ovly507e_new_(const struct nv50_wndw_fun
 	int ret;
 
 	ret = nv50_wndw_new_(func, drm->dev, DRM_PLANE_TYPE_OVERLAY,
-			     "ovly", head, format, &wndw);
+			     "ovly", head, format, BIT(head), &wndw);
 	if (*pwndw = wndw, ret)
 		return ret;
 
--- a/drivers/gpu/drm/nouveau/dispnv50/wndw.c
+++ b/drivers/gpu/drm/nouveau/dispnv50/wndw.c
@@ -420,7 +420,7 @@ nv50_wndw_init(struct nv50_wndw *wndw)
 int
 nv50_wndw_new_(const struct nv50_wndw_func *func, struct drm_device *dev,
 	       enum drm_plane_type type, const char *name, int index,
-	       const u32 *format, struct nv50_wndw **pwndw)
+	       const u32 *format, u32 heads, struct nv50_wndw **pwndw)
 {
 	struct nv50_wndw *wndw;
 	int nformat;
@@ -436,7 +436,7 @@ nv50_wndw_new_(const struct nv50_wndw_fu
 
 	for (nformat = 0; format[nformat]; nformat++);
 
-	ret = drm_universal_plane_init(dev, &wndw->plane, 0, &nv50_wndw,
+	ret = drm_universal_plane_init(dev, &wndw->plane, heads, &nv50_wndw,
 				       format, nformat, NULL,
 				       type, "%s-%d", name, index);
 	if (ret) {
--- a/drivers/gpu/drm/nouveau/dispnv50/wndw.h
+++ b/drivers/gpu/drm/nouveau/dispnv50/wndw.h
@@ -34,7 +34,7 @@ struct nv50_wndw {
 
 int nv50_wndw_new_(const struct nv50_wndw_func *, struct drm_device *,
 		   enum drm_plane_type, const char *name, int index,
-		   const u32 *format, struct nv50_wndw **);
+		   const u32 *format, u32 heads, struct nv50_wndw **);
 void nv50_wndw_init(struct nv50_wndw *);
 void nv50_wndw_fini(struct nv50_wndw *);
 u32 nv50_wndw_flush_set(struct nv50_wndw *, u32 interlock,
