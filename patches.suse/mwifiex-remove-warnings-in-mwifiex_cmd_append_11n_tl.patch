From 6c20495b7debf1f937027526306df3d5daeeb7bc Mon Sep 17 00:00:00 2001
From: Ganapathi Bhat <gbhat@marvell.com>
Date: Thu, 15 Mar 2018 11:50:32 +0530
Subject: [PATCH] mwifiex: remove warnings in mwifiex_cmd_append_11n_tlv()
Git-commit: 6c20495b7debf1f937027526306df3d5daeeb7bc
Patch-mainline: v4.17-rc1
References: FATE#326294

Fix the following sparse warning in mwifiex_cmd_append_11n_tlv:

drivers/net/wireless/marvell/mwifiex/11n.c:358:65: warning: invalid assignment: &=
drivers/net/wireless/marvell/mwifiex/11n.c:358:65:    left side has type restricted __le16
drivers/net/wireless/marvell/mwifiex/11n.c:358:65:    right side has type int
drivers/net/wireless/marvell/mwifiex/11n.c:360:65: warning: invalid assignment: &=
drivers/net/wireless/marvell/mwifiex/11n.c:360:65:    left side has type restricted __le16
drivers/net/wireless/marvell/mwifiex/11n.c:360:65:    right side has type int
drivers/net/wireless/marvell/mwifiex/11n.c:366:65: warning: invalid assignment: &=
drivers/net/wireless/marvell/mwifiex/11n.c:366:65:    left side has type restricted __le16
drivers/net/wireless/marvell/mwifiex/11n.c:366:65:    right side has type int
drivers/net/wireless/marvell/mwifiex/11n.c:368:65: warning: invalid assignment: &=
drivers/net/wireless/marvell/mwifiex/11n.c:368:65:    left side has type restricted __le16
drivers/net/wireless/marvell/mwifiex/11n.c:368:65:    right side has type int

Fixes: 77423fa73927 ("mwifiex: fix incorrect ht capability problem")
Signed-off-by: Ganapathi Bhat <gbhat@marvell.com>
Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
Acked-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/net/wireless/marvell/mwifiex/11n.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/net/wireless/marvell/mwifiex/11n.c b/drivers/net/wireless/marvell/mwifiex/11n.c
index feebfdcf025a..5d75c971004b 100644
--- a/drivers/net/wireless/marvell/mwifiex/11n.c
+++ b/drivers/net/wireless/marvell/mwifiex/11n.c
@@ -356,17 +356,19 @@ mwifiex_cmd_append_11n_tlv(struct mwifiex_private *priv,
 			case IEEE80211_HT_PARAM_CHA_SEC_ABOVE:
 				if (chan->flags & IEEE80211_CHAN_NO_HT40PLUS) {
 					ht_cap->ht_cap.cap_info &=
-					~IEEE80211_HT_CAP_SUP_WIDTH_20_40;
+					cpu_to_le16
+					(~IEEE80211_HT_CAP_SUP_WIDTH_20_40);
 					ht_cap->ht_cap.cap_info &=
-					~IEEE80211_HT_CAP_SGI_40;
+					cpu_to_le16(~IEEE80211_HT_CAP_SGI_40);
 				}
 				break;
 			case IEEE80211_HT_PARAM_CHA_SEC_BELOW:
 				if (chan->flags & IEEE80211_CHAN_NO_HT40MINUS) {
 					ht_cap->ht_cap.cap_info &=
-					~IEEE80211_HT_CAP_SUP_WIDTH_20_40;
+					cpu_to_le16
+					(~IEEE80211_HT_CAP_SUP_WIDTH_20_40);
 					ht_cap->ht_cap.cap_info &=
-					~IEEE80211_HT_CAP_SGI_40;
+					cpu_to_le16(~IEEE80211_HT_CAP_SGI_40);
 				}
 				break;
 			}
-- 
2.19.2

