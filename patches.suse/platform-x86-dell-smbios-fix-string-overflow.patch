From 54d11736ec3179954b6cdea4b4e1136d6bb39f39 Mon Sep 17 00:00:00 2001
From: Arnd Bergmann <arnd@arndb.de>
Date: Wed, 8 Nov 2017 13:08:39 +0100
Subject: [PATCH] platform/x86: dell-smbios: fix string overflow
Git-commit: 54d11736ec3179954b6cdea4b4e1136d6bb39f39
Patch-mainline: v4.15-rc1
References: FATE#325842

The new sysfs code overwrites two fixed-length character arrays
that are each one byte shorter than they need to be, to hold
the trailing \0:

Drivers/platform/x86/dell-smbios.c: In function 'build_tokens_sysfs':
drivers/platform/x86/dell-smbios.c:494:42: error: 'sprintf' writing a terminating nul past the end of the destination [-Werror=format-overflow=]
   sprintf(buffer_location, "%04x_location",
drivers/platform/x86/dell-smbios.c:494:3: note: 'sprintf' output 14 bytes into a destination of size 13
drivers/platform/x86/dell-smbios.c:506:36: error: 'sprintf' writing a terminating nul past the end of the destination [-Werror=format-overflow=]
   sprintf(buffer_value, "%04x_value",
drivers/platform/x86/dell-smbios.c:506:3: note: 'sprintf' output 11 bytes into a destination of size 10

This changes it to just use kasprintf(), which always gets it right.

Discovered with gcc-7.1.1 with the following commit reverted:
bd664f6b3e disable new gcc-7.1.1 warnings for now

Fixes: 33b9ca1e53b4 ("platform/x86: dell-smbios: Add a sysfs interface for SMBIOS tokens")
Signed-off-by: Arnd Bergmann <arnd@arndb.de>
Acked-by: Mario Limonciello <mario.limonciello@dell.com>
[dvhart: add subject prefix and reproducer details for context]
Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
Acked-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/platform/x86/dell-smbios.c |   12 ++++--------
 1 file changed, 4 insertions(+), 8 deletions(-)

--- a/drivers/platform/x86/dell-smbios.c
+++ b/drivers/platform/x86/dell-smbios.c
@@ -463,8 +463,6 @@ static struct platform_driver platform_d
 
 static int build_tokens_sysfs(struct platform_device *dev)
 {
-	char buffer_location[13];
-	char buffer_value[10];
 	char *location_name;
 	char *value_name;
 	size_t size;
@@ -491,9 +489,8 @@ static int build_tokens_sysfs(struct pla
 		if (da_tokens[i].tokenID == 0)
 			continue;
 		/* add location */
-		sprintf(buffer_location, "%04x_location",
-			da_tokens[i].tokenID);
-		location_name = kstrdup(buffer_location, GFP_KERNEL);
+		location_name = kasprintf(GFP_KERNEL, "%04x_location",
+					  da_tokens[i].tokenID);
 		if (location_name == NULL)
 			goto out_unwind_strings;
 		sysfs_attr_init(&token_location_attrs[i].attr);
@@ -503,9 +500,8 @@ static int build_tokens_sysfs(struct pla
 		token_attrs[j++] = &token_location_attrs[i].attr;
 
 		/* add value */
-		sprintf(buffer_value, "%04x_value",
-			da_tokens[i].tokenID);
-		value_name = kstrdup(buffer_value, GFP_KERNEL);
+		value_name = kasprintf(GFP_KERNEL, "%04x_value",
+				       da_tokens[i].tokenID);
 		if (value_name == NULL)
 			goto loop_fail_create_value;
 		sysfs_attr_init(&token_value_attrs[i].attr);
