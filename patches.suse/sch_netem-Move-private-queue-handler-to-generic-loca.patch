From: "David S. Miller" <davem@davemloft.net>
Date: Sun, 29 Jul 2018 16:33:28 -0700
Subject: sch_netem: Move private queue handler to generic location.
Patch-mainline: v4.20-rc1
Git-commit: 596977300ab5c5d5d85f7950dd7f299f8322e533
References: bsc#1109837

By hand copies of SKB list handlers do not belong in individual packet
schedulers.

Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 include/net/sch_generic.h |   11 +++++++++++
 net/sched/sch_netem.c     |   12 +-----------
 2 files changed, 12 insertions(+), 11 deletions(-)

--- a/include/net/sch_generic.h
+++ b/include/net/sch_generic.h
@@ -847,6 +847,17 @@ static inline int qdisc_enqueue_tail(str
 	return NET_XMIT_SUCCESS;
 }
 
+static inline void __qdisc_enqueue_head(struct sk_buff *skb,
+					struct qdisc_skb_head *qh)
+{
+	skb->next = qh->head;
+
+	if (!qh->head)
+		qh->tail = skb;
+	qh->head = skb;
+	qh->qlen++;
+}
+
 static inline struct sk_buff *__qdisc_dequeue_head(struct qdisc_skb_head *qh)
 {
 	struct sk_buff *skb = qh->head;
--- a/net/sched/sch_netem.c
+++ b/net/sched/sch_netem.c
@@ -413,16 +413,6 @@ static struct sk_buff *netem_segment(str
 	return segs;
 }
 
-static void netem_enqueue_skb_head(struct qdisc_skb_head *qh, struct sk_buff *skb)
-{
-	skb->next = qh->head;
-
-	if (!qh->head)
-		qh->tail = skb;
-	qh->head = skb;
-	qh->qlen++;
-}
-
 /*
  * Insert one skb into qdisc.
  * Note: parent depends on return value to account for queue length.
@@ -572,7 +562,7 @@ static int netem_enqueue(struct sk_buff
 		cb->time_to_send = ktime_get_ns();
 		q->counter = 0;
 
-		netem_enqueue_skb_head(&sch->q, skb);
+		__qdisc_enqueue_head(skb, &sch->q);
 		sch->qstats.requeues++;
 	}
 
