From: Yongqiang Sun <yongqiang.sun@amd.com>
Date: Thu, 22 Dec 2016 13:07:11 -0500
Subject: drm/amd/display: Fixed crash caused by unnecessary clock source in
 split pipe.
Git-commit: 8c737fcc24b01ef36da5f78aace70d444485abf9
Patch-mainline: v4.15-rc1
References: FATE#326289 FATE#326079 FATE#326049 FATE#322398 FATE#326166

Signed-off-by: Yongqiang Sun <yongqiang.sun@amd.com>
Reviewed-by: Tony Cheng <Tony.Cheng@amd.com>
Acked-by: Harry Wentland <Harry.Wentland@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 drivers/gpu/drm/amd/display/dc/core/dc_resource.c           |   20 ++++++------
 drivers/gpu/drm/amd/display/dc/dce110/dce110_hw_sequencer.c |    4 +-
 drivers/gpu/drm/amd/display/dc/inc/resource.h               |    2 -
 3 files changed, 13 insertions(+), 13 deletions(-)

--- a/drivers/gpu/drm/amd/display/dc/core/dc_resource.c
+++ b/drivers/gpu/drm/amd/display/dc/core/dc_resource.c
@@ -211,27 +211,28 @@ bool resource_construct(
 
 void resource_unreference_clock_source(
 		struct resource_context *res_ctx,
-		struct clock_source *clock_source)
+		struct clock_source **clock_source)
 {
 	int i;
 	for (i = 0; i < res_ctx->pool->clk_src_count; i++) {
-		if (res_ctx->pool->clock_sources[i] != clock_source)
+		if (res_ctx->pool->clock_sources[i] != *clock_source)
 			continue;
 
 		res_ctx->clock_source_ref_count[i]--;
 
 		if (res_ctx->clock_source_ref_count[i] == 0)
-			clock_source->funcs->cs_power_down(clock_source);
+			(*clock_source)->funcs->cs_power_down(*clock_source);
 
 		break;
 	}
 
-	if (res_ctx->pool->dp_clock_source == clock_source) {
+	if (res_ctx->pool->dp_clock_source == *clock_source) {
 		res_ctx->dp_clock_source_ref_count--;
 
 		if (res_ctx->dp_clock_source_ref_count == 0)
-			clock_source->funcs->cs_power_down(clock_source);
+			(*clock_source)->funcs->cs_power_down(*clock_source);
 	}
+	*clock_source = NULL;
 }
 
 void resource_reference_clock_source(
@@ -288,11 +289,6 @@ static bool is_sharable_clk_src(
 	if (pipe_with_clk_src->clock_source == NULL)
 		return false;
 
-	if (pipe_with_clk_src->stream == NULL) {
-		ASSERT(0);
-		return false;
-	}
-
 	if (pipe_with_clk_src->stream->signal == SIGNAL_TYPE_VIRTUAL)
 		return false;
 
@@ -1148,6 +1144,10 @@ enum dc_status resource_map_pool_resourc
 				pipe_ctx->stream = stream;
 				copy_pipe_ctx(old_pipe_ctx, pipe_ctx);
 
+				/* Split pipe resource, do not acquire back end */
+				if (!pipe_ctx->stream_enc)
+					continue;
+
 				set_stream_engine_in_use(
 					&context->res_ctx,
 					pipe_ctx->stream_enc);
--- a/drivers/gpu/drm/amd/display/dc/dce110/dce110_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/display/dc/dce110/dce110_hw_sequencer.c
@@ -1028,7 +1028,7 @@ static void switch_dp_clock_sources(
 			if (clk_src &&
 				clk_src != pipe_ctx->clock_source) {
 				resource_unreference_clock_source(
-					res_ctx, pipe_ctx->clock_source);
+					res_ctx, &pipe_ctx->clock_source);
 				pipe_ctx->clock_source = clk_src;
 				resource_reference_clock_source(res_ctx, clk_src);
 
@@ -1056,7 +1056,7 @@ static void reset_single_pipe_hw_ctx(
 	pipe_ctx->mi->funcs->free_mem_input(
 				pipe_ctx->mi, context->target_count);
 	resource_unreference_clock_source(
-			&context->res_ctx, pipe_ctx->clock_source);
+			&context->res_ctx, &pipe_ctx->clock_source);
 
 	dc->hwss.power_down_front_end((struct core_dc *)dc, pipe_ctx);
 
--- a/drivers/gpu/drm/amd/display/dc/inc/resource.h
+++ b/drivers/gpu/drm/amd/display/dc/inc/resource.h
@@ -94,7 +94,7 @@ void resource_build_info_frame(struct pi
 
 void resource_unreference_clock_source(
 		struct resource_context *res_ctx,
-		struct clock_source *clock_source);
+		struct clock_source **clock_source);
 
 void resource_reference_clock_source(
 		struct resource_context *res_ctx,
