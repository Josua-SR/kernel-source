From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Fri, 21 Apr 2017 00:33:54 +0300
Subject: drm: omapdrm: Rename the omap_gem_object addrs field to dma_addrs
Git-commit: 57c22f7cc24ab6284d23d370929f2d452bb79729
Patch-mainline: v4.13-rc1
References: FATE#326289 FATE#326079 FATE#326049 FATE#322398 FATE#326166

The field contains DMA addresses, clarify that by renaming it.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 drivers/gpu/drm/omapdrm/omap_gem.c |   22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

--- a/drivers/gpu/drm/omapdrm/omap_gem.c
+++ b/drivers/gpu/drm/omapdrm/omap_gem.c
@@ -95,7 +95,7 @@ struct omap_gem_object {
 	struct page **pages;
 
 	/** addresses corresponding to pages in above array */
-	dma_addr_t *addrs;
+	dma_addr_t *dma_addrs;
 
 	/**
 	 * Virtual address, if mapped.
@@ -277,7 +277,7 @@ static int omap_gem_attach_pages(struct
 		}
 	}
 
-	omap_obj->addrs = addrs;
+	omap_obj->dma_addrs = addrs;
 	omap_obj->pages = pages;
 
 	return 0;
@@ -323,15 +323,15 @@ static void omap_gem_detach_pages(struct
 	if (omap_obj->flags & (OMAP_BO_WC|OMAP_BO_UNCACHED)) {
 		int i, npages = obj->size >> PAGE_SHIFT;
 		for (i = 0; i < npages; i++) {
-			if (omap_obj->addrs[i])
+			if (omap_obj->dma_addrs[i])
 				dma_unmap_page(obj->dev->dev,
-					       omap_obj->addrs[i],
+					       omap_obj->dma_addrs[i],
 					       PAGE_SIZE, DMA_BIDIRECTIONAL);
 		}
 	}
 
-	kfree(omap_obj->addrs);
-	omap_obj->addrs = NULL;
+	kfree(omap_obj->dma_addrs);
+	omap_obj->dma_addrs = NULL;
 
 	drm_gem_put_pages(obj, omap_obj->pages, true, false);
 	omap_obj->pages = NULL;
@@ -739,10 +739,10 @@ void omap_gem_cpu_sync(struct drm_gem_ob
 	struct drm_device *dev = obj->dev;
 	struct omap_gem_object *omap_obj = to_omap_bo(obj);
 
-	if (is_cached_coherent(obj) && omap_obj->addrs[pgoff]) {
-		dma_unmap_page(dev->dev, omap_obj->addrs[pgoff],
+	if (is_cached_coherent(obj) && omap_obj->dma_addrs[pgoff]) {
+		dma_unmap_page(dev->dev, omap_obj->dma_addrs[pgoff],
 				PAGE_SIZE, DMA_BIDIRECTIONAL);
-		omap_obj->addrs[pgoff] = 0;
+		omap_obj->dma_addrs[pgoff] = 0;
 	}
 }
 
@@ -760,7 +760,7 @@ void omap_gem_dma_sync(struct drm_gem_ob
 		return;
 
 	for (i = 0; i < npages; i++) {
-		if (!omap_obj->addrs[i]) {
+		if (!omap_obj->dma_addrs[i]) {
 			dma_addr_t addr;
 
 			addr = dma_map_page(dev->dev, pages[i], 0,
@@ -773,7 +773,7 @@ void omap_gem_dma_sync(struct drm_gem_ob
 			}
 
 			dirty = true;
-			omap_obj->addrs[i] = addr;
+			omap_obj->dma_addrs[i] = addr;
 		}
 	}
 
