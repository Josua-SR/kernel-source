From: Randy Dunlap <rdunlap@infradead.org>
Date: Tue, 30 Jun 2020 10:29:10 -0700
Subject: bpf: Fix net/core/filter build errors when INET is not enabled
Patch-mainline: v5.9-rc1
Git-commit: 6b207d66aa9fad0deed13d5f824e1ea193b0a777
References: bsc#1177028

Fix build errors when CONFIG_INET is not set/enabled.

(.text+0x2b1b): undefined reference to `tcp_prot'
(.text+0x2b3b): undefined reference to `tcp_prot'

Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Acked-by: Yonghong Song <yhs@fb.com>
Link: https://lore.kernel.org/bpf/b1a858ec-7e04-56bc-248a-62cb9bbee726@infradead.org
Acked-by: Gary Lin <glin@suse.com>
---
 net/core/filter.c |    4 ++++
 1 file changed, 4 insertions(+)

--- a/net/core/filter.c
+++ b/net/core/filter.c
@@ -9346,8 +9346,10 @@ const struct bpf_func_proto bpf_skc_to_t
 
 BPF_CALL_1(bpf_skc_to_tcp_timewait_sock, struct sock *, sk)
 {
+#ifdef CONFIG_INET
 	if (sk->sk_prot == &tcp_prot && sk->sk_state == TCP_TIME_WAIT)
 		return (unsigned long)sk;
+#endif
 
 #if IS_BUILTIN(CONFIG_IPV6)
 	if (sk->sk_prot == &tcpv6_prot && sk->sk_state == TCP_TIME_WAIT)
@@ -9368,8 +9370,10 @@ const struct bpf_func_proto bpf_skc_to_t
 
 BPF_CALL_1(bpf_skc_to_tcp_request_sock, struct sock *, sk)
 {
+#ifdef CONFIG_INET
 	if (sk->sk_prot == &tcp_prot  && sk->sk_state == TCP_NEW_SYN_RECV)
 		return (unsigned long)sk;
+#endif
 
 #if IS_BUILTIN(CONFIG_IPV6)
 	if (sk->sk_prot == &tcpv6_prot && sk->sk_state == TCP_NEW_SYN_RECV)
