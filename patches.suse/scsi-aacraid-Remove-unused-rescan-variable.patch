From: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date: Tue, 26 Dec 2017 20:34:49 -0800
Subject: scsi: aacraid: Remove unused rescan variable
Patch-mainline: v4.16-rc1
Git-commit: 75be67cd155d95658507b15ffe905c36243526ae
References: FATE#325927

Remove unused rescan variable.

Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 drivers/scsi/aacraid/aachba.c  |   19 +++++++++----------
 drivers/scsi/aacraid/aacraid.h |    6 +++---
 drivers/scsi/aacraid/commsup.c |   14 +++++++-------
 drivers/scsi/aacraid/linit.c   |    4 ++--
 4 files changed, 21 insertions(+), 22 deletions(-)

--- a/drivers/scsi/aacraid/aachba.c
+++ b/drivers/scsi/aacraid/aachba.c
@@ -1821,12 +1821,11 @@ static inline void aac_free_safw_ciss_lu
 /**
  *	aac_get_safw_ciss_luns()	Process topology change
  *	@dev:		aac_dev structure
- *	@rescan:	Indicates rescan
  *
  *	Execute a CISS REPORT PHYS LUNS and process the results into
  *	the current hba_map.
  */
-static int aac_get_safw_ciss_luns(struct aac_dev *dev, int rescan)
+static int aac_get_safw_ciss_luns(struct aac_dev *dev)
 {
 	int rcode = -ENOMEM;
 	int datasize;
@@ -1932,7 +1931,7 @@ static inline void aac_free_safw_all_ide
 	}
 }
 
-static int aac_get_safw_attr_all_targets(struct aac_dev *dev, int rescan)
+static int aac_get_safw_attr_all_targets(struct aac_dev *dev)
 {
 	int i;
 	int rcode = 0;
@@ -1972,7 +1971,7 @@ free_identify_resp:
  *
  *	Update our hba map with the information gathered from the FW
  */
-static void aac_set_safw_attr_all_targets(struct aac_dev *dev, int rescan)
+static void aac_set_safw_attr_all_targets(struct aac_dev *dev)
 {
 	/* ok and extended reporting */
 	u32 lun_count, nexus;
@@ -2018,7 +2017,7 @@ update_devtype:
 	}
 }
 
-static int aac_setup_safw_targets(struct aac_dev *dev, int rescan)
+static int aac_setup_safw_targets(struct aac_dev *dev)
 {
 	int rcode = 0;
 
@@ -2026,15 +2025,15 @@ static int aac_setup_safw_targets(struct
 	if (unlikely(rcode < 0))
 		goto out;
 
-	rcode = aac_get_safw_ciss_luns(dev, rescan);
+	rcode = aac_get_safw_ciss_luns(dev);
 	if (unlikely(rcode < 0))
 		goto out;
 
-	rcode = aac_get_safw_attr_all_targets(dev, rescan);
+	rcode = aac_get_safw_attr_all_targets(dev);
 	if (unlikely(rcode < 0))
 		goto free_ciss_luns;
 
-	aac_set_safw_attr_all_targets(dev, rescan);
+	aac_set_safw_attr_all_targets(dev);
 
 	aac_free_safw_all_identify_resp(dev, -1);
 free_ciss_luns:
@@ -2043,9 +2042,9 @@ out:
 	return rcode;
 }
 
-int aac_setup_safw_adapter(struct aac_dev *dev, int rescan)
+int aac_setup_safw_adapter(struct aac_dev *dev)
 {
-	return aac_setup_safw_targets(dev, rescan);
+	return aac_setup_safw_targets(dev);
 }
 
 int aac_get_adapter_info(struct aac_dev* dev)
--- a/drivers/scsi/aacraid/aacraid.h
+++ b/drivers/scsi/aacraid/aacraid.h
@@ -2646,7 +2646,7 @@ static inline int aac_adapter_check_heal
 }
 
 
-int aac_scan_host(struct aac_dev *dev, int rescan);
+int aac_scan_host(struct aac_dev *dev);
 
 static inline void aac_schedule_safw_scan_worker(struct aac_dev *dev)
 {
@@ -2661,7 +2661,7 @@ static inline void aac_safw_rescan_worke
 	wait_event(dev->scsi_host_ptr->host_wait,
 		!scsi_host_in_recovery(dev->scsi_host_ptr));
 
-	aac_scan_host(dev, AAC_RESCAN);
+	aac_scan_host(dev);
 }
 
 static inline void aac_cancel_safw_rescan_worker(struct aac_dev *dev)
@@ -2679,7 +2679,7 @@ static inline void aac_cancel_safw_resca
 void aac_safw_rescan_worker(struct work_struct *work);
 int aac_acquire_irq(struct aac_dev *dev);
 void aac_free_irq(struct aac_dev *dev);
-int aac_setup_safw_adapter(struct aac_dev *dev, int rescan);
+int aac_setup_safw_adapter(struct aac_dev *dev);
 const char *aac_driverinfo(struct Scsi_Host *);
 void aac_fib_vector_assign(struct aac_dev *dev);
 struct fib *aac_fib_alloc(struct aac_dev *dev);
--- a/drivers/scsi/aacraid/commsup.c
+++ b/drivers/scsi/aacraid/commsup.c
@@ -1915,7 +1915,7 @@ static int aac_is_safw_device_exposed(st
 	return is_exposed;
 }
 
-static int aac_update_safw_host_devices(struct aac_dev *dev, int rescan)
+static int aac_update_safw_host_devices(struct aac_dev *dev)
 {
 	int i;
 	int bus;
@@ -1923,7 +1923,7 @@ static int aac_update_safw_host_devices(
 	int is_exposed = 0;
 	int rcode = 0;
 
-	rcode = aac_setup_safw_adapter(dev, rescan);
+	rcode = aac_setup_safw_adapter(dev);
 	if (unlikely(rcode < 0)) {
 		goto out;
 	}
@@ -1945,24 +1945,24 @@ out:
 	return rcode;
 }
 
-static int aac_scan_safw_host(struct aac_dev *dev, int rescan)
+static int aac_scan_safw_host(struct aac_dev *dev)
 {
 	int rcode = 0;
 
-	rcode = aac_update_safw_host_devices(dev, rescan);
+	rcode = aac_update_safw_host_devices(dev);
 	if (rcode)
 		aac_schedule_safw_scan_worker(dev);
 
 	return rcode;
 }
 
-int aac_scan_host(struct aac_dev *dev, int rescan)
+int aac_scan_host(struct aac_dev *dev)
 {
 	int rcode = 0;
 
 	mutex_lock(&dev->scan_mutex);
 	if (dev->sa_firmware)
-		rcode = aac_scan_safw_host(dev, rescan);
+		rcode = aac_scan_safw_host(dev);
 	else
 		scsi_scan_host(dev->scsi_host_ptr);
 	mutex_unlock(&dev->scan_mutex);
@@ -2003,7 +2003,7 @@ static void aac_handle_sa_aif(struct aac
 	case SA_AIF_LDEV_CHANGE:
 	case SA_AIF_BPCFG_CHANGE:
 
-		aac_scan_host(dev, AAC_RESCAN);
+		aac_scan_host(dev);
 
 		break;
 
--- a/drivers/scsi/aacraid/linit.c
+++ b/drivers/scsi/aacraid/linit.c
@@ -1793,7 +1793,7 @@ static int aac_probe_one(struct pci_dev
 	if (error)
 		goto out_deinit;
 
-	aac_scan_host(aac, AAC_INIT);
+	aac_scan_host(aac);
 
 	pci_enable_pcie_error_reporting(pdev);
 	pci_save_state(pdev);
@@ -2080,7 +2080,7 @@ static void aac_pci_resume(struct pci_de
 		if (sdev->sdev_state == SDEV_OFFLINE)
 			sdev->sdev_state = SDEV_RUNNING;
 	scsi_unblock_requests(aac->scsi_host_ptr);
-	aac_scan_host(aac, AAC_RESCAN);
+	aac_scan_host(aac);
 	pci_save_state(pdev);
 
 	dev_err(&pdev->dev, "aacraid: PCI error - resume\n");
