From: YueHaibing <yuehaibing@huawei.com>
Date: Wed, 19 Sep 2018 20:28:38 +0800
Subject: RDMA/core: Properly return the error code of rdma_set_src_addr_rcu
Patch-mainline: v4.20-rc1
Git-commit: 0965cc953a235196b8d6ef0cba45ecb5c355194f
References: bsc#1103992 FATE#326009

rdma_set_src_addr_rcu should check copy_src_l2_addr fails, rather than
always return 0. Also copy_src_l2_addr should return 'ret' as its return
value when rdma_translate_ip fails.

Fixes: c31d4b2ddf07 ("RDMA/core: Protect against changing dst->dev during destination resolve")
Signed-off-by: YueHaibing <yuehaibing@huawei.com>
Reviewed-by: Parav Pandit <parav@mellanox.com>
Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/infiniband/core/addr.c |   13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

--- a/drivers/infiniband/core/addr.c
+++ b/drivers/infiniband/core/addr.c
@@ -468,10 +468,10 @@ static int addr_resolve_neigh(const stru
 	return ret;
 }
 
-static void copy_src_l2_addr(struct rdma_dev_addr *dev_addr,
-			     const struct sockaddr *dst_in,
-			     const struct dst_entry *dst,
-			     const struct net_device *ndev)
+static int copy_src_l2_addr(struct rdma_dev_addr *dev_addr,
+			    const struct sockaddr *dst_in,
+			    const struct dst_entry *dst,
+			    const struct net_device *ndev)
 {
 	int ret = 0;
 
@@ -492,6 +492,8 @@ static void copy_src_l2_addr(struct rdma
 						RDMA_NETWORK_IPV6;
 	else
 		dev_addr->network = RDMA_NETWORK_IB;
+
+	return ret;
 }
 
 static int rdma_set_src_addr_rcu(struct rdma_dev_addr *dev_addr,
@@ -515,8 +517,7 @@ static int rdma_set_src_addr_rcu(struct
 			return -ENODEV;
 	}
 
-	copy_src_l2_addr(dev_addr, dst_in, dst, ndev);
-	return 0;
+	return copy_src_l2_addr(dev_addr, dst_in, dst, ndev);
 }
 
 static int set_addr_netns_by_gid_rcu(struct rdma_dev_addr *addr)
