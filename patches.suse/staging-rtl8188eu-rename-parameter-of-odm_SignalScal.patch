From b8c8d487725e4b20027aaf9b92da45e13267d51b Mon Sep 17 00:00:00 2001
From: Michael Straube <straube.linux@gmail.com>
Date: Sun, 30 Sep 2018 21:53:02 +0200
Subject: [PATCH] staging: rtl8188eu: rename parameter of odm_SignalScaleMapping()
Git-commit: b8c8d487725e4b20027aaf9b92da45e13267d51b
Patch-mainline: v4.20-rc1
References: FATE#326906

Rename parameter of odm_SignalScaleMapping() to avoid CamelCase.
CurrSig -> currsig

Signed-off-by: Michael Straube <straube.linux@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Acked-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/staging/rtl8188eu/hal/odm_hwconfig.c | 31 ++++++++++----------
 1 file changed, 16 insertions(+), 15 deletions(-)

diff --git a/drivers/staging/rtl8188eu/hal/odm_hwconfig.c b/drivers/staging/rtl8188eu/hal/odm_hwconfig.c
index 6d7c379c4444..25a6531ddf02 100644
--- a/drivers/staging/rtl8188eu/hal/odm_hwconfig.c
+++ b/drivers/staging/rtl8188eu/hal/odm_hwconfig.c
@@ -26,26 +26,27 @@ static u8 odm_query_rxpwrpercentage(s8 antpower)
 
 /*  2012/01/12 MH MOve some signal strength smooth method to MP HAL layer. */
 /*  IF other SW team do not support the feature, remove this section.?? */
-static s32 odm_SignalScaleMapping(struct odm_dm_struct *dm_odm, s32 CurrSig)
+static s32 odm_SignalScaleMapping(struct odm_dm_struct *dm_odm, s32 currsig)
 {
 	s32 RetSig = 0;
 
-	if (CurrSig >= 51 && CurrSig <= 100)
+	if (currsig >= 51 && currsig <= 100)
 		RetSig = 100;
-	else if (CurrSig >= 41 && CurrSig <= 50)
-		RetSig = 80 + ((CurrSig - 40) * 2);
-	else if (CurrSig >= 31 && CurrSig <= 40)
-		RetSig = 66 + (CurrSig - 30);
-	else if (CurrSig >= 21 && CurrSig <= 30)
-		RetSig = 54 + (CurrSig - 20);
-	else if (CurrSig >= 10 && CurrSig <= 20)
-		RetSig = 42 + (((CurrSig - 10) * 2) / 3);
-	else if (CurrSig >= 5 && CurrSig <= 9)
-		RetSig = 22 + (((CurrSig - 5) * 3) / 2);
-	else if (CurrSig >= 1 && CurrSig <= 4)
-		RetSig = 6 + (((CurrSig - 1) * 3) / 2);
+	else if (currsig >= 41 && currsig <= 50)
+		RetSig = 80 + ((currsig - 40) * 2);
+	else if (currsig >= 31 && currsig <= 40)
+		RetSig = 66 + (currsig - 30);
+	else if (currsig >= 21 && currsig <= 30)
+		RetSig = 54 + (currsig - 20);
+	else if (currsig >= 10 && currsig <= 20)
+		RetSig = 42 + (((currsig - 10) * 2) / 3);
+	else if (currsig >= 5 && currsig <= 9)
+		RetSig = 22 + (((currsig - 5) * 3) / 2);
+	else if (currsig >= 1 && currsig <= 4)
+		RetSig = 6 + (((currsig - 1) * 3) / 2);
 	else
-		RetSig = CurrSig;
+		RetSig = currsig;
+
 	return RetSig;
 }
 
-- 
2.19.1

