From: Liang Yan <lyan@suse.com>
Date: Tue, 28 Jan 2020 15:54:47 -0500
Subject: kvm: aarch64: Avoid guest access host debug/PMU registers
Patch-mainline: Not yet, pending
References: bnc#1161692

A bug was found in the arm64/KVM code where a guest can access the
debug/PMU registers used by the host without being trapped. This can
only happen during the vCPU start until the first preemption. Systems
with an ARMv8.1 or later CPU are affected (with the Virtualisation Host
Extensions).

The implications are that a guest, for a brief period, may be able to
read event counters belonging to the host or trigger perf-related IRQs
in the host, with a potential DoS risk.

Signed-off-by: Liang Yan <lyan@suse.com>
---
 arch/arm64/kvm/debug.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)
--- a/arch/arm64/kvm/debug.c	
+++ a/arch/arm64/kvm/debug.c	
@@ -101,7 +101,7 @@ void kvm_arm_reset_debug_ptr(struct kvm_vcpu *vcpu)
 void kvm_arm_setup_debug(struct kvm_vcpu *vcpu)
 {
 	bool trap_debug = !(vcpu->arch.flags & KVM_ARM64_DEBUG_DIRTY);
-	unsigned long mdscr;
+	unsigned long mdscr, orig_mdcr_el2 = vcpu->arch.mdcr_el2;
 
 	trace_kvm_arm_setup_debug(vcpu, vcpu->guest_debug);
 
@@ -197,6 +197,10 @@ void kvm_arm_setup_debug(struct kvm_vcpu *vcpu)
 	if (vcpu_read_sys_reg(vcpu, MDSCR_EL1) & (DBG_MDSCR_KDE | DBG_MDSCR_MDE))
 		vcpu->arch.flags |= KVM_ARM64_DEBUG_DIRTY;
 
+	/* Write mdcr_el2 changes since vcpu_load on VHE systems */
+	if (has_vhe() && orig_mdcr_el2 != vcpu->arch.mdcr_el2)
+		write_sysreg(vcpu->arch.mdcr_el2, mdcr_el2);
+
 	trace_kvm_arm_set_dreg32("MDCR_EL2", vcpu->arch.mdcr_el2);
 	trace_kvm_arm_set_dreg32("MDSCR_EL1", vcpu_read_sys_reg(vcpu, MDSCR_EL1));
 }
