From: Petr Mladek <pmladek@suse.com>
Date: Tue, 11 Jun 2019 16:13:20 +0200
Subject: livepatch: Remove duplicate warning about missing reliable stacktrace
 support
Git-commit: ac59a471e9371e3184425efd6a2fd8ac5c7e4c2b
Patch-mainline: v5.3-rc1
References: bsc#1071995 fate#323487

WARN_ON_ONCE() could not be called safely under rq lock because
of console deadlock issues. Moreover WARN_ON_ONCE() is superfluous in
klp_check_stack(), because stack_trace_save_tsk_reliable() cannot return
-ENOSYS thanks to klp_have_reliable_stack() check in
klp_try_switch_task().

[ mbenes: changelog edited ]
[ 
  mbenes (backport): the changelog corresponds to upstream. We did not backport
  tglx's stack tracing changes. The reason for the change is still valid though.
]
Signed-off-by: Miroslav Benes <mbenes@suse.cz>
Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
Reviewed-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Signed-off-by: Petr Mladek <pmladek@suse.com>
---
 kernel/livepatch/transition.c |    1 -
 1 file changed, 1 deletion(-)

--- a/kernel/livepatch/transition.c
+++ b/kernel/livepatch/transition.c
@@ -259,7 +259,6 @@ static int klp_check_stack(struct task_s
 	int ret, nr_entries;
 
 	ret = stack_trace_save_tsk_reliable(task, entries, ARRAY_SIZE(entries));
-	WARN_ON_ONCE(ret == -ENOSYS);
 	if (ret < 0) {
 		snprintf(err_buf, STACK_ERR_BUF_SIZE,
 			 "%s: %s:%d has an unreliable stack\n",
