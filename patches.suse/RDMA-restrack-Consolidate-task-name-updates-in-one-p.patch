From: Leon Romanovsky <leonro@mellanox.com>
Date: Tue, 2 Oct 2018 11:48:02 +0300
Subject: RDMA/restrack: Consolidate task name updates in one place
Patch-mainline: v4.20-rc1
Git-commit: 2165fc264079ecb7fbfa5e8b330a92eb3f0fcbe1
References: bsc#1103992 FATE#326009

Unify task update and kernel name set in one place.

Reviewed-by: Artemy Kovalyov <artemyko@mellanox.com>
Reviewed-by: Yossi Itigin <yosefe@mellanox.com>
Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
Reviewed-by: Steve Wise <swise@opengridcomputing.com>
Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/infiniband/core/cma.c      |   10 ++--------
 drivers/infiniband/core/cq.c       |    2 +-
 drivers/infiniband/core/restrack.c |   13 +++++++++----
 drivers/infiniband/core/verbs.c    |    4 ++--
 include/rdma/restrack.h            |    4 ++--
 5 files changed, 16 insertions(+), 17 deletions(-)

--- a/drivers/infiniband/core/cma.c
+++ b/drivers/infiniband/core/cma.c
@@ -877,10 +877,7 @@ struct rdma_cm_id *__rdma_create_id(stru
 	if (!id_priv)
 		return ERR_PTR(-ENOMEM);
 
-	if (caller)
-		id_priv->res.kern_name = caller;
-	else
-		rdma_restrack_set_task(&id_priv->res, current);
+	rdma_restrack_set_task(&id_priv->res, caller);
 	id_priv->res.type = RDMA_RESTRACK_CM_ID;
 	id_priv->state = RDMA_CM_IDLE;
 	id_priv->id.context = context;
@@ -3947,10 +3944,7 @@ int __rdma_accept(struct rdma_cm_id *id,
 
 	id_priv = container_of(id, struct rdma_id_private, id);
 
-	if (caller)
-		id_priv->res.kern_name = caller;
-	else
-		rdma_restrack_set_task(&id_priv->res, current);
+	rdma_restrack_set_task(&id_priv->res, caller);
 
 	if (!cma_comp(id_priv, RDMA_CM_CONNECT))
 		return -EINVAL;
--- a/drivers/infiniband/core/cq.c
+++ b/drivers/infiniband/core/cq.c
@@ -161,7 +161,7 @@ struct ib_cq *__ib_alloc_cq(struct ib_de
 		goto out_destroy_cq;
 
 	cq->res.type = RDMA_RESTRACK_CQ;
-	cq->res.kern_name = caller;
+	rdma_restrack_set_task(&cq->res, caller);
 	rdma_restrack_add(&cq->res);
 
 	switch (cq->poll_ctx) {
--- a/drivers/infiniband/core/restrack.c
+++ b/drivers/infiniband/core/restrack.c
@@ -156,12 +156,17 @@ static bool res_is_user(struct rdma_rest
 }
 
 void rdma_restrack_set_task(struct rdma_restrack_entry *res,
-			    struct task_struct *task)
+			    const char *caller)
 {
+	if (caller) {
+		res->kern_name = caller;
+		return;
+	}
+
 	if (res->task)
 		put_task_struct(res->task);
-	get_task_struct(task);
-	res->task = task;
+	get_task_struct(current);
+	res->task = current;
 }
 EXPORT_SYMBOL(rdma_restrack_set_task);
 
@@ -177,7 +182,7 @@ void rdma_restrack_add(struct rdma_restr
 
 	if (res_is_user(res)) {
 		if (!res->task)
-			rdma_restrack_set_task(res, current);
+			rdma_restrack_set_task(res, NULL);
 		res->kern_name = NULL;
 	} else {
 		set_kern_name(res);
--- a/drivers/infiniband/core/verbs.c
+++ b/drivers/infiniband/core/verbs.c
@@ -264,7 +264,7 @@ struct ib_pd *__ib_alloc_pd(struct ib_de
 	}
 
 	pd->res.type = RDMA_RESTRACK_PD;
-	pd->res.kern_name = caller;
+	rdma_restrack_set_task(&pd->res, caller);
 	rdma_restrack_add(&pd->res);
 
 	if (mr_access_flags) {
@@ -1890,7 +1890,7 @@ struct ib_cq *__ib_create_cq(struct ib_d
 		cq->cq_context    = cq_context;
 		atomic_set(&cq->usecnt, 0);
 		cq->res.type = RDMA_RESTRACK_CQ;
-		cq->res.kern_name = caller;
+		rdma_restrack_set_task(&cq->res, caller);
 		rdma_restrack_add(&cq->res);
 	}
 
--- a/include/rdma/restrack.h
+++ b/include/rdma/restrack.h
@@ -173,10 +173,10 @@ int rdma_restrack_put(struct rdma_restra
 /**
  * rdma_restrack_set_task() - set the task for this resource
  * @res:  resource entry
- * @task: task struct
+ * @caller: kernel name, the current task will be used if the caller is NULL.
  */
 void rdma_restrack_set_task(struct rdma_restrack_entry *res,
-			    struct task_struct *task);
+			    const char *caller);
 
 /*
  * Helper functions for rdma drivers when filling out
