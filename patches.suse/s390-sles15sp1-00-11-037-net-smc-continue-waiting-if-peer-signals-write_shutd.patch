From: Stefan Raspl <raspl@linux.ibm.com>
Subject: net/smc: continue waiting if peer signals write_shutdown
Patch-mainline: v4.16-rc1
Git-commit: aa377e682d0703452642d4059a94ab7fdaa90b89
References: FATE#325694, LTC#167874, bsc#1113480

Summary:     net/smc: SMC-R MVP
Description: Add latest upstream patches to push SMC-R to the MVP level

Upstream-Description:

             net/smc: continue waiting if peer signals write_shutdown

             If the peer sends a shutdown WRITE, this should not affect sending
             in general, and waiting for send buffer space in particular.
             Stop waiting of the local socket for send buffer space only, if peer
             signals closing, but not if peer signals just shutdown WRITE.

             Signed-off-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
             Signed-off-by: David S. Miller <davem@davemloft.net>

Signed-off-by: Stefan Raspl <raspl@linux.ibm.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 net/smc/smc_tx.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/net/smc/smc_tx.c
+++ b/net/smc/smc_tx.c
@@ -85,7 +85,7 @@ static int smc_tx_wait_memory(struct smc
 			rc = -EPIPE;
 			break;
 		}
-		if (conn->local_rx_ctrl.conn_state_flags.peer_conn_abort) {
+		if (smc_cdc_rxed_any_close(conn)) {
 			rc = -ECONNRESET;
 			break;
 		}
@@ -106,7 +106,7 @@ static int smc_tx_wait_memory(struct smc
 		sk_wait_event(sk, &timeo,
 			      sk->sk_err ||
 			      (sk->sk_shutdown & SEND_SHUTDOWN) ||
-			      smc_cdc_rxed_any_close_or_senddone(conn) ||
+			      smc_cdc_rxed_any_close(conn) ||
 			      atomic_read(&conn->sndbuf_space),
 			      &wait);
 	}
