From: =?UTF-8?q?Michel=20D=C3=A4nzer?= <michel.daenzer@amd.com>
Date: Mon, 29 May 2017 17:32:38 +0900
Subject: drm/radeon: Make si_support and cik_support parameters always
 available
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Git-commit: 6ac07e1b309a70469d2822689b54d4726846dd64
Patch-mainline: v4.13-rc1
References: FATE#326289 FATE#326079 FATE#326049 FATE#322398 FATE#326166

This will allow amdgpu-pro / other out-of-tree amdgpu builds to make use
of these options for using the out-of-tree amdgpu driver instead of the
in-tree radeon driver in a clean way.

Reviewed-by: Christian König <christian.koenig@amd.com>
Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 drivers/gpu/drm/radeon/radeon.h     |    5 -----
 drivers/gpu/drm/radeon/radeon_drv.c |    4 ----
 drivers/gpu/drm/radeon/radeon_kms.c |    4 ----
 3 files changed, 13 deletions(-)

--- a/drivers/gpu/drm/radeon/radeon.h
+++ b/drivers/gpu/drm/radeon/radeon.h
@@ -115,13 +115,8 @@ extern int radeon_auxch;
 extern int radeon_mst;
 extern int radeon_uvd;
 extern int radeon_vce;
-
-#ifdef CONFIG_DRM_AMDGPU_SI
 extern int radeon_si_support;
-#endif
-#ifdef CONFIG_DRM_AMDGPU_CIK
 extern int radeon_cik_support;
-#endif
 
 /*
  * Copy from radeon_drv.h so we don't have to include both and have conflicting
--- a/drivers/gpu/drm/radeon/radeon_drv.c
+++ b/drivers/gpu/drm/radeon/radeon_drv.c
@@ -294,17 +294,13 @@ module_param_named(uvd, radeon_uvd, int,
 MODULE_PARM_DESC(vce, "vce enable/disable vce support (1 = enable, 0 = disable)");
 module_param_named(vce, radeon_vce, int, 0444);
 
-#ifdef CONFIG_DRM_AMDGPU_SI
 int radeon_si_support = 1;
 MODULE_PARM_DESC(si_support, "SI support (1 = enabled (default), 0 = disabled)");
 module_param_named(si_support, radeon_si_support, int, 0444);
-#endif
 
-#ifdef CONFIG_DRM_AMDGPU_CIK
 int radeon_cik_support = 0;
 MODULE_PARM_DESC(cik_support, "CIK support (1 = enabled, 0 = disabled (default))");
 module_param_named(cik_support, radeon_cik_support, int, 0444);
-#endif
 
 static struct pci_device_id pciidlist[] = {
 	radeon_PCI_IDS
--- a/drivers/gpu/drm/radeon/radeon_kms.c
+++ b/drivers/gpu/drm/radeon/radeon_kms.c
@@ -98,7 +98,6 @@ int radeon_driver_load_kms(struct drm_de
 	struct radeon_device *rdev;
 	int r, acpi_status;
 
-#ifdef CONFIG_DRM_AMDGPU_SI
 	if (!radeon_si_support) {
 		switch (flags & RADEON_FAMILY_MASK) {
 		case CHIP_TAHITI:
@@ -111,8 +110,6 @@ int radeon_driver_load_kms(struct drm_de
 			return -ENODEV;
 		}
 	}
-#endif
-#ifdef CONFIG_DRM_AMDGPU_CIK
 	if (!radeon_cik_support) {
 		switch (flags & RADEON_FAMILY_MASK) {
 		case CHIP_KAVERI:
@@ -128,7 +125,6 @@ int radeon_driver_load_kms(struct drm_de
 			return -ENODEV;
 		}
 	}
-#endif
 
 	rdev = kzalloc(sizeof(struct radeon_device), GFP_KERNEL);
 	if (rdev == NULL) {
