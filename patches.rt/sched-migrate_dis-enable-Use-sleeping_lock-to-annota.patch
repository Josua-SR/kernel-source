From: Scott Wood <swood@redhat.com>
Date: Tue, 24 Sep 2019 14:36:41 +0200
Subject: [PATCH] sched: migrate_dis/enable: Use sleeping_lock…() to annotate sleeping points
Git-repo: git://git.kernel.org/pub/scm/linux/kernel/git/wagi/linux-stable-rt.git
Git-commit: 6486ae7948b82345e2c7f0959447a42e56a04f95
Patch-mainline: Queued in subsystem maintainer repository
References: SLE Realtime Extension

Without this, rcu_note_context_switch() will complain if an RCU read lock
is held when migrate_enable() calls stop_one_cpu().  Likewise when
migrate_disable() calls pin_current_cpu() which calls __read_rt_lock() --
which bypasses the part of the mutex code that calls sleeping_lock_inc().

Signed-off-by: Scott Wood <swood@redhat.com>
[bigeasy: use sleeping_lock_…() ]
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Signed-off-by: Daniel Wagner <dwagner@suse.de>
---
 kernel/cpu.c        |    2 ++
 kernel/sched/core.c |    3 +++
 2 files changed, 5 insertions(+)

--- a/kernel/cpu.c
+++ b/kernel/cpu.c
@@ -310,7 +310,9 @@ void pin_current_cpu(void)
 	cpu = smp_processor_id();
 	preempt_enable();
 
+	sleeping_lock_inc();
 	__read_rt_lock(cpuhp_pin);
+	sleeping_lock_dec();
 
 	preempt_disable();
 	if (cpu != smp_processor_id()) {
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -7855,7 +7855,10 @@ void migrate_enable(void)
 
 			unpin_current_cpu();
 			preempt_enable();
+
+			sleeping_lock_inc();
 			stop_one_cpu(task_cpu(p), migration_cpu_stop, &arg);
+			sleeping_lock_dec();
 			return;
 		}
 	}
